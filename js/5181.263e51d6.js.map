{"version":3,"file":"js/5181.263e51d6.js","mappings":"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","sources":["webpack://opencdms-app/./src/views/wis2-subscription.vue","webpack://opencdms-app/./src/views/wis2-subscription.vue?cc0a","webpack://opencdms-app/../../../src/components/VForm/VForm.tsx","webpack://opencdms-app/../../../src/components/VGrid/VCol.ts","webpack://opencdms-app/../../../src/components/VGrid/VRow.ts"],"sourcesContent":["<template>\n  <div>\n    <wis2-subscription title=\"wis2-subscription\" content=\"This page is under construction\" description=\"editable view of settings for single subscription\" />\n  </div>\n</template>\n\n<script>\nimport Wis2Subscription from './../web-components/wis2-subscription.vue';\n\n\nexport default {\n  name: 'MyView',\n  components: {\n    Wis2Subscription,\n  },\n};\n</script>\n\n<style>\n</style>\n","import { render } from \"./wis2-subscription.vue?vue&type=template&id=9975cb88\"\nimport script from \"./wis2-subscription.vue?vue&type=script&lang=js\"\nexport * from \"./wis2-subscription.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Composables\nimport { createForm, makeFormProps } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { ref } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { SubmitEventPromise } from '@/composables/form'\n\nexport const VForm = genericComponent()({\n  name: 'VForm',\n\n  props: {\n    ...makeFormProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean | null) => true,\n    submit: (e: SubmitEventPromise) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const form = createForm(props)\n    const formRef = ref<HTMLFormElement>()\n\n    function onReset (e: Event) {\n      e.preventDefault()\n      form.reset()\n    }\n\n    function onSubmit (_e: Event) {\n      const e = _e as SubmitEventPromise\n\n      const ready = form.validate()\n      e.then = ready.then.bind(ready)\n      e.catch = ready.catch.bind(ready)\n      e.finally = ready.finally.bind(ready)\n\n      emit('submit', e)\n\n      if (!e.defaultPrevented) {\n        ready.then(({ valid }) => {\n          if (valid) {\n            formRef.value?.submit()\n          }\n        })\n      }\n\n      e.preventDefault()\n    }\n\n    useRender(() => ((\n      <form\n        ref={ formRef }\n        class=\"v-form\"\n        novalidate\n        onReset={ onReset }\n        onSubmit={ onSubmit }\n      >\n        { slots.default?.(form) }\n      </form>\n    )))\n\n    return forwardRefs(form, formRef)\n  },\n})\n\nexport type VForm = InstanceType<typeof VForm>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<string, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n      default: null,\n      validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n    },\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: classes.value,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\nconst SPACE = ['space-between', 'space-around', 'space-evenly'] as const\n\nfunction makeRowProps <T> (prefix: string, def: () => Prop<T, null>) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + capitalize(val)] = def()\n    return props\n  }, {} as Record<string, Prop<T, null>>)\n}\n\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'] as const\nconst alignValidator = (str: any) => ALIGN_VALUES.includes(str)\nconst alignProps = makeRowProps('align', () => ({\n  type: String as PropType<typeof ALIGN_VALUES[number]>,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE] as const\nconst justifyValidator = (str: any) => JUSTIFY_VALUES.includes(str)\nconst justifyProps = makeRowProps('justify', () => ({\n  type: String as PropType<typeof JUSTIFY_VALUES[number]>,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'] as const\nconst alignContentValidator = (str: any) => ALIGN_CONTENT_VALUES.includes(str)\nconst alignContentProps = makeRowProps('alignContent', () => ({\n  type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const VRow = genericComponent()({\n  name: 'VRow',\n\n  props: {\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String as PropType<typeof ALIGN_VALUES[number]>,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n      default: null,\n      validator: alignContentValidator,\n    },\n\n    ...alignContentProps,\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: ['v-row', classes.value],\n    }, slots.default?.())\n  },\n})\n\nexport type VRow = InstanceType<typeof VRow>\n"],"names":["_createElementBlock","_createVNode","_component_wis2_subscription","title","content","description","name","components","Wis2Subscription","__exports__","render","VForm","genericComponent","props","makeFormProps","emits","val","submit","e","setup","slots","emit","form","createForm","formRef","ref","onReset","preventDefault","reset","onSubmit","_e","ready","validate","then","bind","catch","finally","defaultPrevented","_ref2","valid","value","useRender","default","forwardRefs","breakpoints","breakpointProps","reduce","type","Boolean","String","Number","offsetProps","capitalize","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","ALIGN_SELF_VALUES","VCol","cols","alignSelf","validator","str","includes","makeTagProps","classes","computed","classList","forEach","push","hasColClasses","some","startsWith","h","tag","class","ALIGNMENT","SPACE","makeRowProps","prefix","def","ALIGN_VALUES","alignValidator","alignProps","JUSTIFY_VALUES","justifyValidator","justifyProps","ALIGN_CONTENT_VALUES","alignContentValidator","alignContentProps","align","justify","alignContent","classMap","VRow","dense","noGutters"],"sourceRoot":""}