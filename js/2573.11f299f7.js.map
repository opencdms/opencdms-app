{"version":3,"file":"js/2573.11f299f7.js","mappings":"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","sources":["webpack://opencdms-app/./src/views/map-picker-test.vue","webpack://opencdms-app/./src/views/map-picker-test.vue?37ad","webpack://opencdms-app/./src/web-components/pickers/geometry.vue","webpack://opencdms-app/./src/web-components/pickers/geometry.vue?33a1","webpack://opencdms-app/../../../src/components/VForm/VForm.tsx","webpack://opencdms-app/../../../src/components/VGrid/VCol.ts","webpack://opencdms-app/../../../src/components/VGrid/VRow.ts"],"sourcesContent":["<template>\n  <v-container style=\"width: 100%;\">\n    <v-row>\n      <v-col :cols=12>\n        <v-row>\n          <v-col :cols=12><geometry-picker v-model=\"geom\" style=\"height: 100%\" @geometry-selected=\"updateGeom\"/></v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport GeometryPicker from './../web-components/pickers/geometry.vue';\nimport { VCard, VCardTitle, VCardText, VForm, VTextField } from 'vuetify/lib/components';\nimport { VContainer, VRow, VCol } from 'vuetify/lib/components';\nimport BaseMap from './../web-components/maps/base-map.vue'\n\nexport default {\n  components: {\n    GeometryPicker,\n    BaseMap,\n    VCard,\n    VCardTitle,\n    VContainer,\n    VRow,\n    VCol, VForm, VTextField\n  },\n  data() {\n    return {\n      geom: null\n    }\n  },\n  methods: {\n    updateGeom(geometry) {\n      console.log(geometry)\n      this.geom = geometry;\n    }\n  }\n};\n</script>\n\n<style>\n  #map{\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n","import { render } from \"./map-picker-test.vue?vue&type=template&id=07604501\"\nimport script from \"./map-picker-test.vue?vue&type=script&lang=js\"\nexport * from \"./map-picker-test.vue?vue&type=script&lang=js\"\n\nimport \"./map-picker-test.vue?vue&type=style&index=0&id=07604501&lang=css\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-container>\n  <v-row>\n    <v-col :cols=6>\n      <v-card style=\"min-height: 500px;\">\n        <v-card-title>Select location</v-card-title>\n        <v-card-text style=\"height: 500px;\"><base-map @mapLoaded='onMapLoaded' @click=\"selectGeometry\"></base-map></v-card-text>\n      </v-card>\n    </v-col>\n    <v-col :cols=6>\n      <v-row><v-col :cols=12><v-text-field label=\"Longitude\" v-model=\"geom.geometry.coordinates[0]\" type=\"number\" hint=\"Longitude (-180 to 180)\" persistent-hint></v-text-field></v-col></v-row>\n      <v-row><v-col :cols=12><v-text-field label=\"Latitude\" v-model=\"geom.geometry.coordinates[1]\" type=\"number\" hint=\"Latitude (-90 to 90)\" persistent-hint></v-text-field></v-col></v-row>\n      <v-row><v-col :cols=12></v-col><v-text-field label=\"WKT\" v-model=\"geom.properties.wkt\" hint=\"autogenerated\" readonly persistent-hint></v-text-field></v-row>\n    </v-col>\n  </v-row>\n  </v-container>\n</template>\n\n<script>\n  import \"leaflet/dist/leaflet.css\";\n  import L from 'leaflet';\n  import {defineComponent, ref, computed, context, emit, watch} from 'vue';\n  import {VCard, VCardTitle, VCardItem, VCardText, VContainer, VRow, VCol, VTextField} from 'vuetify/lib/components';\n  import * as Wkt from 'wicket';\n  import BaseMap from '@/web-components/maps/base-map.vue';\n\n  export default defineComponent({\n    name: 'GeometryPicker',\n    props:{\n      geometry_type: {\n        type: String,\n        default: \"point\",\n      },\n      modelValue:  {\n        type: String,\n        default: \"\"\n      }\n    },\n    components: {\n      VCard,\n      VCardTitle,\n      VCardItem,\n      VCardText,\n      VContainer,\n      VRow,\n      VCol,\n      VTextField,\n      BaseMap\n    },\n    emits: [\"update:modelValue\"],\n    setup(props, {emit}){\n      const enabled = ref(true)\n      const geom = ref({\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: [null, null]\n        },\n        properties: {\n          wkt: \"\"\n        }\n      })\n      const map = ref(null);\n      const geojsonLayer = ref(null);\n      const wkt = ref(\"\");\n      const onMapLoaded = async (mapInstance) => {\n        map.value = mapInstance;\n        geojsonLayer.value = L.geoJSON().addTo(map.value);\n        // check if we have data to add\n        if( geom.value.geometry.coordinates[0] != null & geom.value.geometry.coordinates[1] != null ){\n          geojsonLayer.value.addData( geom.value);\n          map.value.setView( [ geom.value.geometry.coordinates[1], geom.value.geometry.coordinates[0]])\n        }\n      };\n      const selectGeometry = (e) => {\n        if (map.value.dragging._draggable._moved || ! enabled.value ) {\n         // If the user has moved the map do nothing\n          return;\n        }\n        const point = map.value.mouseEventToLatLng(e);\n        var _wkt = new Wkt.Wkt();\n        if (props.geometry_type === \"point\"){\n          geom.value.geometry.coordinates = [point.lng, point.lat];\n          _wkt.read(JSON.stringify(geom.value));\n          geom.value.properties.wkt = \"SRID=4326; \" + _wkt.write();\n          updateMap(map);\n        }\n      };\n\n      // watch for changes to reactive geom\n      watch(() => geom, (newVal) => {\n        // update the wkt\n        var _wkt = new Wkt.Wkt();\n        _wkt.read(JSON.stringify(geom.value));\n        geom.value.properties.wkt = \"SRID=4326; \" + _wkt.write();\n        updateMap(map);\n      }, { deep: true });\n\n      // watch for changes to props\n      watch( () => props.modelValue, (newValue) => {\n          if( newValue ){\n            geom.value.properties.wkt = newValue;\n            const coords = newValue.match(/POINT\\(([-\\d\\.]+)\\s+([-\\d\\.]+)\\)/);\n            const latlng = [parseFloat(coords[1]), parseFloat(coords[2])];\n            geom.value.geometry.coordinates = latlng;\n            if(map.value){updateMap(map)};\n          }\n        },{immediate: true}\n      )\n\n      const updateMap = (map) => {\n        if( map.value ){\n          if( geom.value.geometry.coordinates[0] != null & geom.value.geometry.coordinates[1] != null ){\n            geojsonLayer.value.clearLayers();\n            geojsonLayer.value.addData( geom.value);\n            map.value.setView( [ geom.value.geometry.coordinates[1], geom.value.geometry.coordinates[0]])\n            emit(\"update:modelValue\", geom.value.properties.wkt);\n          }\n        }\n      };\n      return {map, onMapLoaded, selectGeometry, geom}\n    }\n  });\n\n</script>\n","import { render } from \"./geometry.vue?vue&type=template&id=70979e34\"\nimport script from \"./geometry.vue?vue&type=script&lang=js\"\nexport * from \"./geometry.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Composables\nimport { createForm, makeFormProps } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { ref } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { SubmitEventPromise } from '@/composables/form'\n\nexport const VForm = genericComponent()({\n  name: 'VForm',\n\n  props: {\n    ...makeFormProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean | null) => true,\n    submit: (e: SubmitEventPromise) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const form = createForm(props)\n    const formRef = ref<HTMLFormElement>()\n\n    function onReset (e: Event) {\n      e.preventDefault()\n      form.reset()\n    }\n\n    function onSubmit (_e: Event) {\n      const e = _e as SubmitEventPromise\n\n      const ready = form.validate()\n      e.then = ready.then.bind(ready)\n      e.catch = ready.catch.bind(ready)\n      e.finally = ready.finally.bind(ready)\n\n      emit('submit', e)\n\n      if (!e.defaultPrevented) {\n        ready.then(({ valid }) => {\n          if (valid) {\n            formRef.value?.submit()\n          }\n        })\n      }\n\n      e.preventDefault()\n    }\n\n    useRender(() => ((\n      <form\n        ref={ formRef }\n        class=\"v-form\"\n        novalidate\n        onReset={ onReset }\n        onSubmit={ onSubmit }\n      >\n        { slots.default?.(form) }\n      </form>\n    )))\n\n    return forwardRefs(form, formRef)\n  },\n})\n\nexport type VForm = InstanceType<typeof VForm>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<string, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n      default: null,\n      validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n    },\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: classes.value,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\nconst SPACE = ['space-between', 'space-around', 'space-evenly'] as const\n\nfunction makeRowProps <T> (prefix: string, def: () => Prop<T, null>) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + capitalize(val)] = def()\n    return props\n  }, {} as Record<string, Prop<T, null>>)\n}\n\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'] as const\nconst alignValidator = (str: any) => ALIGN_VALUES.includes(str)\nconst alignProps = makeRowProps('align', () => ({\n  type: String as PropType<typeof ALIGN_VALUES[number]>,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE] as const\nconst justifyValidator = (str: any) => JUSTIFY_VALUES.includes(str)\nconst justifyProps = makeRowProps('justify', () => ({\n  type: String as PropType<typeof JUSTIFY_VALUES[number]>,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'] as const\nconst alignContentValidator = (str: any) => ALIGN_CONTENT_VALUES.includes(str)\nconst alignContentProps = makeRowProps('alignContent', () => ({\n  type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const VRow = genericComponent()({\n  name: 'VRow',\n\n  props: {\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String as PropType<typeof ALIGN_VALUES[number]>,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n      default: null,\n      validator: alignContentValidator,\n    },\n\n    ...alignContentProps,\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: ['v-row', classes.value],\n    }, slots.default?.())\n  },\n})\n\nexport type VRow = InstanceType<typeof VRow>\n"],"names":["_createBlock","_component_v_container","style","_createVNode","_component_v_row","_component_v_col","cols","_component_geometry_picker","$data","onGeometrySelected","$options","components","GeometryPicker","BaseMap","VCard","VCardTitle","VContainer","VRow","VCol","VForm","VTextField","data","geom","methods","updateGeom","geometry","console","log","this","__exports__","render","_component_v_card","_component_v_card_title","_component_v_card_text","_component_base_map","onMapLoaded","_ctx","onClick","_component_v_text_field","label","coordinates","type","hint","properties","wkt","readonly","defineComponent","name","props","geometry_type","String","default","modelValue","VCardItem","VCardText","emits","setup","emit","enabled","ref","map","geojsonLayer","async","value","mapInstance","L","addTo","addData","setView","selectGeometry","e","dragging","_draggable","_moved","point","mouseEventToLatLng","_wkt","Wkt","lng","lat","read","JSON","stringify","write","updateMap","watch","newVal","deep","newValue","coords","match","latlng","parseFloat","immediate","clearLayers","genericComponent","makeFormProps","val","submit","slots","form","createForm","formRef","onReset","preventDefault","reset","onSubmit","_e","ready","validate","then","bind","catch","finally","defaultPrevented","_ref2","valid","useRender","forwardRefs","breakpoints","breakpointProps","reduce","Boolean","Number","offsetProps","capitalize","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","ALIGN_SELF_VALUES","alignSelf","validator","str","includes","makeTagProps","classes","computed","classList","forEach","push","hasColClasses","some","startsWith","h","tag","class","ALIGNMENT","SPACE","makeRowProps","prefix","def","ALIGN_VALUES","alignValidator","alignProps","JUSTIFY_VALUES","justifyValidator","justifyProps","ALIGN_CONTENT_VALUES","alignContentValidator","alignContentProps","align","justify","alignContent","classMap","dense","noGutters"],"sourceRoot":""}