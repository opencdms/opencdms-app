{"version":3,"file":"js/3254.23c8c152.js","mappings":"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","sources":["webpack://opencdms-app/./src/views/data-parameter.vue","webpack://opencdms-app/./src/web-components/data-parameter.vue","webpack://opencdms-app/./src/web-components/data-parameter.vue?0711","webpack://opencdms-app/./src/views/data-parameter.vue?9e5b","webpack://opencdms-app/./src/web-components/pickers/select-observed-property.vue","webpack://opencdms-app/./src/web-components/pickers/select-observed-property.vue?9c62","webpack://opencdms-app/../../../src/components/VGrid/VCol.ts"],"sourcesContent":["<template>\n  <div>\n    <data-parameter title=\"data-parameter\" content=\"This page is under construction\" description=\"parameter based view of observations\" />\n  </div>\n</template>\n\n<script>\nimport DataParameter from './../web-components/data-parameter.vue';\n\n\nexport default {\n  name: 'MyView',\n  components: {\n    DataParameter,\n  },\n};\n</script>\n\n<style>\n</style>\n","<template>\n  <v-container>\n      <v-row>\n      <v-col :cols=\"12\">\n        <v-card>\n          <v-card-title>Select station</v-card-title>\n          <v-card-text><select-host v-model=\"selectedHost\"/></v-card-text>\n        </v-card>\n      </v-col>\n      </v-row>\n  \n      <v-row>\n      </v-row>\n  \n      <v-row v-if='host'>\n        <v-col :cols=\"12\">\n          <v-card>\n            <v-card-title>Select from available data for {{ host.name }}</v-card-title>\n            \n            <v-card-item>\n                <v-container>\n                  <v-row>\n                    <v-col :cols=\"4\"><select-observed-property v-model=\"selectedProperty\"/></v-col>\n                    <v-col :cols=\"4\">\n                      <VueDatePicker\n                        :start-date=\"initDate\"\n                        :disabled=\"startDisabled\"\n                        :enable-time-picker=\"false\"\n                        :format=\"dateFormat\"\n                        :min-date=\"minDate\"\n                        :max-date=\"maxDate\"\n                        :teleport=\"true\"\n                        hint=\"Phenomenon start date\"\n                        label=\"phenomenon_start\"\n                        persistent-hint\n                        prevent-min-max-navigation\n                        v-model=\"startDate\"\n                      ></VueDatePicker>\n                      <!-- v-message is not being formatted correctly, therefore manually formatting -->\n                      <div class=\"v-messages\" role=\"alert\" aria-live=\"polite\">\n                        <div class=\"v-messages__message\" style=\"padding-top: 10px;\">Select a start date</div>\n                      </div>\n                    </v-col>\n                    <v-col :cols=\"4\">\n                      <VueDatePicker\n                        :start-date=\"initDate\"\n                        :disabled=\"endDisabled\"\n                        :enable-time-picker=\"false\"\n                        :format=\"dateFormat\"\n                        :min-date=\"minDate\"\n                        :max-date=\"maxDate\"\n                        :teleport=\"true\"\n                        hint=\"Phenomenon end date\"\n                        label=\"phenomenon_end\"\n                        persistent-hint\n                        prevent-min-max-navigation\n                        v-model=\"endDate\"\n                      ></VueDatePicker>\n                      <div class=\"v-messages\" role=\"alert\" aria-live=\"polite\">\n                        <div class=\"v-messages__message\" style=\"padding-top: 10px;\">Select an end date</div>\n                      </div>\n                    </v-col>\n                  </v-row>\n                </v-container>\n              </v-card-item>\n          </v-card>\n        </v-col>\n      </v-row>\n  \n      <v-row>\n        <v-col :cols=\"12\">\n          <v-btn @click=\"plotChart\" :disabled=\"plotDisabled\">Plot Chart</v-btn>\n        </v-col>\n      </v-row>\n  \n      <v-row>\n        <v-col :cols=\"12\">\n          <v-card v-if='obsLoaded'>\n            <v-card-title></v-card-title>\n            <v-card-item><Line :data=\"chartData\" :options=\"chartOptions\"/></v-card-item>\n          </v-card>\n        </v-col>\n      </v-row>\n  \n  </v-container>\n  \n  \n  </template>\n  \n  <script>\n  import { defineComponent, ref, watchEffect, computed, watch } from 'vue';\n  import { VCard, VCardTitle, VCardText, VCardItem, VTabs, VTab, VBtn, VAutocomplete } from 'vuetify/lib/components';\n  import { VContainer, VCol, VRow } from 'vuetify/lib/components';\n  import { onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted, onErrorCaptured} from 'vue';\n  import { useRoute, useRouter } from 'vue-router';\n  \n  import {useRepo} from 'pinia-orm';\n  \n  import SelectHost from '@/web-components/pickers/select-host.vue';\n  import SelectObservedProperty from '@/web-components/pickers/select-observed-property.vue';\n  import VueDatePicker from '@vuepic/vue-datepicker';\n  import '@vuepic/vue-datepicker/dist/main.css';\n  \n  // opencdms imports\n  import Host from '@/models/Host';\n  \n  import {Line} from 'vue-chartjs';\n  import { Chart, CategoryScale, LinearScale, LineController, LineElement, PointElement} from 'chart.js';\n  import { max } from 'd3';\n  Chart.register(CategoryScale, LinearScale, LineController, LineElement, PointElement);\n  \n  export default defineComponent({\n    name: 'station',\n    components: {\n      VCard,\n      VCardTitle,\n      VCardText,\n      VCardItem,\n      VTabs,\n      VTab,\n      VBtn,\n      VAutocomplete, VContainer, VCol, VRow,\n      SelectHost,\n      SelectObservedProperty,\n      VueDatePicker,\n      Line\n    },\n    methods: {},\n    setup(props) {\n      // set up varaiables\n      const initDate = ref(null)\n      const minDate = ref(null)\n      const maxDate = ref(null)\n      const plotDisabled = ref(true);\n      const selectedHost = ref(null)\n      const selectedProperty = ref(null)\n      const router = useRouter();\n      const startDisabled = ref(true);\n      const endDisabled = ref(true);\n      const startDate = ref(null);\n      const endDate = ref(null);\n      const route = useRoute();\n      const data = ref([]);\n      const obs = ref(null);\n      const obsLoaded = ref(false);\n  \n      // set up repos\n      const hostRepo = useRepo(Host);\n      const hostOptions = computed(() => { return hostRepo.all() });\n      const host = ref(null)\n  \n      const dateFormat = (date) => {\n        const day = date.getDate();\n        const month = date.getMonth() + 1;\n        const year = date.getFullYear();\n        return `${year}-${month}-${day}`;\n      }\n  \n      const chartOptions = computed(() => ({\n        scales: {\n          x: {\n            type: \"category\",\n            title: {\n              display: true,\n              text: 'Date'\n            }\n          },\n          y: {\n            type: 'linear',\n            position: 'left',\n            ticks: {\n              stepSize: 1\n            },\n            title: {\n              display: true,\n              text: selectedProperty.value?.short_name\n            }\n          },\n        }\n      }));\n  \n      const plotChart = async () => {\n        let dateRange = '';\n        // Getting an error if we don't initialise obs.value early\n        obs.value = [];  \n        \n        if (startDate.value !== null && endDate.value !== null) {\n          const start = startDate.value.toISOString().split('T')[0];\n          const end = endDate.value.toISOString().split('T')[0];\n          dateRange = `&datetime=${encodeURIComponent(start)}/${encodeURIComponent(end)}`;\n        }\n        \n        const encodedHostId = encodeURIComponent(host.value.id);\n        const encodedObservedPropertyId = encodeURIComponent(selectedProperty.value.id);\n        const apiUrl = `${process.env.API}/collections/observations/items?f=json&lang=en-US&limit=10000&sortby=phenomenon_start&properties=observed_property_id,phenomenon_start,result_value&skipGeometry=true&host_id=${encodedHostId}&observed_property_id=${encodedObservedPropertyId}${dateRange}`;\n  \n        fetch(apiUrl)\n          .then(response => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('API request failed:', apiUrl);\n            }\n          })\n          .then(data => {\n            obs.value = data.features.map(feature => {\n              const datetime = new Date(feature.properties.phenomenon_start);\n              const date = datetime.toISOString().split('T')[0];\n              return {\n                date: date,\n                data: feature.properties.result_value\n              }\n            })\n            console.log('fetch obs', apiUrl, obs.value);\n          })\n  \n          .catch(error => {\n            console.error(error);\n          });\n  \n        obsLoaded.value = true;\n      }\n   \n      function setDateRange(observed_property_id) {\n        console.log('setDateRange(', observed_property_id, ')');\n        const encodedHostId = encodeURIComponent(host.value.id);\n        const encodedObservedPropertyId = encodeURIComponent(observed_property_id);\n        const apiUrl = `${process.env.API}/collections/observations/items?f=json&lang=en-US&limit=1&properties=phenomenon_start&skipGeometry=true&host_id=${encodedHostId}&observed_property_id=${encodedObservedPropertyId}`;\n  \n        const firstDateUrl = `${apiUrl}&sortby=%2Bphenomenon_start`;\n        const lastDateUrl = `${apiUrl}&sortby=-phenomenon_start`;\n        \n        // Disable date pickers\n        startDisabled.value = endDisabled.value = true;\n  \n        fetch(firstDateUrl)\n          .then(response => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('API request failed:', firstDateUrl);\n            }\n          })\n          .then(data => {\n            minDate.value = \n              (new Date(data.features[0].properties['phenomenon_start'])).toISOString().split(\"T\")[0];\n            console.log('fetch firstDateUrl', firstDateUrl, minDate.value);\n            if (minDate.value != null && maxDate.value == null) {\n              startDisabled.value = endDisabled.value = false;\n            }\n          })\n          .catch(error => {\n            //console.error(error);\n            minDate.value = null;\n          });\n        \n        fetch(lastDateUrl)\n          .then(response => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('API request failed:', firstDateUrl);\n            }\n          })\n          .then(data => {\n            maxDate.value = \n              (new Date(data.features[0].properties['phenomenon_start'])).toISOString().split(\"T\")[0];\n            initDate.value = maxDate.value;\n            console.log('fetch lastDateUrl', lastDateUrl, maxDate.value);\n            if (minDate.value != null && maxDate.value == null) {\n                startDisabled.value = endDisabled.value = false;\n            }\n          })\n          .catch(error => {\n            //console.error(error);\n            maxDate.value = null;\n          });\n      }\n  \n      const fetchRecord = async(identifier) => {\n        // load selected host\n        host.value = useRepo(Host).where('id',route.params.id).first();\n        // Reset the other selectors\n        //selectedProperty.value = null;\n      };\n  \n      onMounted( async() => {\n        fetchRecord( route.params.id );\n        watchEffect( () => {\n          fetchRecord( route.params.id );\n        });\n        watch( (selectedHost), (data) => {\n          router.push('/data/station/'+data.id);\n        } )\n        watch( (selectedProperty), (data) => {\n          console.log('selectedProperty =', data);\n          if (data !== null) setDateRange(data.id);\n        } )\n        watch( (startDate), (data) => {\n          plotDisabled.value = (startDate.value == null || endDate.value == null);\n          plotDisabled.value ? obsLoaded.value = false : obsLoaded.value = false\n        } )\n        watch( (endDate), (data) => {\n          plotDisabled.value = (startDate.value == null || endDate.value == null);\n          plotDisabled.value ? obsLoaded.value = false : obsLoaded.value = false\n        } )\n  \n      });\n      onErrorCaptured( () => {});\n  \n  \n      const chartData = computed(() => {\n        if (obs.value) {\n          //console.log(obs.value);\n          let retval = {\n            // labels: obs.value.map(d => new Date(d.date)),\n            labels: obs.value.map(d => d.date),\n            datasets: [\n              {\n                label: 'Air temperature',\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                borderColor: 'rgba(255, 99, 132, 1)',\n                borderWidth: 1,\n                pointBackgroundColor: 'rgba(255, 99, 132, 1)',\n                pointBorderColor: 'rgba(255, 99, 132, 1)',\n                pointHoverBackgroundColor: 'rgba(255, 99, 132, 1)',\n                pointHoverBorderColor: 'rgba(255, 99, 132, 1)',\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.8)',\n                hoverBorderColor: 'rgba(255, 99, 132, 1)',\n                pointRadius: 2,\n                data: obs.value.map(d => d.data)\n              }\n            ]\n          };\n          return retval;\n        } else {\n          return {};\n        }\n      });\n  \n      return {host, plotChart, hostOptions, selectedHost, selectedProperty, /*geom,*/\n        obs, chartData, chartOptions, obsLoaded, dateFormat,\n        initDate,\n        minDate,\n        maxDate,\n        plotDisabled,\n        startDate,\n        endDate,\n        startDisabled,\n        endDisabled\n      };\n    }\n  \n  });\n  \n  </script>\n  ","import { render } from \"./data-parameter.vue?vue&type=template&id=1e371e39\"\nimport script from \"./data-parameter.vue?vue&type=script&lang=js\"\nexport * from \"./data-parameter.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\work\\\\projects\\\\opencdms\\\\git\\\\tmp\\\\opencdms-app-cg19\\\\opencdms-app-cg19-mine\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./data-parameter.vue?vue&type=template&id=23e7ec2c\"\nimport script from \"./data-parameter.vue?vue&type=script&lang=js\"\nexport * from \"./data-parameter.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\work\\\\projects\\\\opencdms\\\\git\\\\tmp\\\\opencdms-app-cg19\\\\opencdms-app-cg19-mine\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// component to select station\n<template>\n  <v-autocomplete :items=\"options\" item-title=\"short_name\" item-value=\"id\" label=\"observed property\" v-model=\"selected\" :hint=\"selected ? selected.standard_name : 'Select an observed property'\" persistent-hint return-object/>\n</template>\n<script>\n  // load host\n  import ObservedProperty from '@/models/ObservedProperty'\n  import {useRepo} from 'pinia-orm'\n  import {computed, defineComponent, ref, watch} from 'vue';\n  import {VAutocomplete} from 'vuetify/lib/components';\n  export default defineComponent({\n    name: \"SelectObservedProperty\",\n    components: {\n      VAutocomplete\n    },\n    emits: [\"update:modelValue\"],\n    setup(props, {emit}) {\n      const selected = ref(null);\n      const options = computed( () => { return useRepo(ObservedProperty).all(); });\n      console.log( options );\n      const optionsHint = computed( () => {});\n      watch( () => selected.value, (newValue) => {\n        emit(\"update:modelValue\", newValue)\n      })\n      return {selected, options};\n    }\n  });\n</script>\n","import { render } from \"./select-observed-property.vue?vue&type=template&id=29982722\"\nimport script from \"./select-observed-property.vue?vue&type=script&lang=js\"\nexport * from \"./select-observed-property.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\work\\\\projects\\\\opencdms\\\\git\\\\tmp\\\\opencdms-app-cg19\\\\opencdms-app-cg19-mine\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<string, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n      default: null,\n      validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n    },\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: classes.value,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n"],"names":["_createElementBlock","_createVNode","_component_data_parameter","title","content","description","_createElementVNode","class","role","style","_createBlock","_component_v_container","_component_v_row","_component_v_col","cols","_component_v_card","_component_v_card_title","_component_v_card_text","_component_select_host","_ctx","key","name","_component_v_card_item","_component_select_observed_property","_component_VueDatePicker","disabled","format","teleport","hint","label","_hoisted_1","_hoisted_2","_component_v_btn","onClick","_component_Line","data","options","Chart","CategoryScale","LinearScale","LineController","LineElement","PointElement","defineComponent","components","VCard","VCardTitle","VCardText","VCardItem","VTabs","VTab","VBtn","VAutocomplete","VContainer","VCol","VRow","SelectHost","SelectObservedProperty","VueDatePicker","Line","methods","setup","props","initDate","ref","minDate","maxDate","plotDisabled","selectedHost","selectedProperty","router","useRouter","startDisabled","endDisabled","startDate","endDate","route","useRoute","obs","obsLoaded","hostRepo","useRepo","Host","hostOptions","computed","all","host","dateFormat","date","day","getDate","month","getMonth","year","getFullYear","chartOptions","scales","x","type","display","text","y","position","ticks","stepSize","value","short_name","plotChart","async","dateRange","start","toISOString","split","end","encodeURIComponent","encodedHostId","id","encodedObservedPropertyId","apiUrl","fetch","then","response","ok","json","Error","features","map","feature","datetime","Date","properties","phenomenon_start","result_value","console","log","catch","error","setDateRange","observed_property_id","firstDateUrl","lastDateUrl","fetchRecord","where","params","first","onMounted","watchEffect","watch","push","onErrorCaptured","chartData","retval","labels","d","datasets","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","hoverBackgroundColor","hoverBorderColor","pointRadius","__exports__","DataParameter","render","_component_v_autocomplete","items","standard_name","emits","emit","selected","ObservedProperty","newValue","breakpoints","breakpointProps","reduce","val","Boolean","String","Number","default","offsetProps","capitalize","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","ALIGN_SELF_VALUES","genericComponent","alignSelf","validator","str","includes","makeTagProps","slots","classes","classList","forEach","hasColClasses","some","startsWith","h","tag"],"sourceRoot":""}