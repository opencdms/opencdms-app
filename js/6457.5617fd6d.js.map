{"version":3,"file":"js/6457.5617fd6d.js","mappings":"8PACEA,EAAAA,EAAAA,IAEM,aADJC,EAAAA,EAAAA,IAAYC,I,yNCDdC,EAAAA,EAAAA,IAUSC,EAAAA,KAAAA,C,kBATP,IAAmD,EAAnDH,EAAAA,EAAAA,IAAmDI,EAAAA,KAAAA,C,kBAArC,IAAsB,UAAtB,6B,OACdJ,EAAAA,EAAAA,IAOcK,EAAAA,KAAAA,C,kBANV,IAIS,EAJTL,EAAAA,EAAAA,IAISM,EAAAA,KAAAA,C,kBAHL,IAAmH,EAAnHN,EAAAA,EAAAA,IAAmHO,EAAAA,KAAAA,C,kBAAtG,IAAwF,EAAxFP,EAAAA,EAAAA,IAAwFQ,EAAAA,CAA1EC,MAAM,K,WAAcC,EAAAA,UAAUC,G,qCAAVD,EAAAA,UAAUC,GAAE,GAAGC,KAAK,GAAG,sB,iCACtEZ,EAAAA,EAAAA,IAAuHO,EAAAA,KAAAA,C,kBAA1G,IAA4F,EAA5FP,EAAAA,EAAAA,IAA4FQ,EAAAA,CAA9EC,MAAM,O,WAAgBC,EAAAA,UAAUG,K,qCAAVH,EAAAA,UAAUG,KAAI,GAAGD,KAAK,GAAG,sB,iCAC1EZ,EAAAA,EAAAA,IAA2JO,EAAAA,KAAAA,C,kBAA9I,IAAgI,EAAhIP,EAAAA,EAAAA,IAAgIQ,EAAAA,CAAlHC,MAAM,c,WAAuBC,EAAAA,UAAUI,Y,qCAAVJ,EAAAA,UAAUI,YAAW,GAAGF,KAAK,yBAAyB,sB,0CAElHZ,EAAAA,EAAAA,IAAwDe,EAAAA,CAAhDC,QAAON,EAAAA,iBAAe,C,kBAAE,IAAgB,UAAhB,uB,gLAqBxC,GAAeO,EAAAA,EAAAA,IAAgB,CAC7BJ,KAAM,gBACNK,MAAO,CACP,EACAC,QAAQ,CACNC,WAAYC,GACV,IAAIC,EAMJ,OAJEA,EADED,GAASA,EAAME,OAAS,EACpBC,KAAKC,UAAUJ,GAEf,GAEDC,CACT,GAEFI,WAAY,CACVC,MAAK,IACLC,WAAU,IACVC,UAAS,IACTC,UAAS,IACTC,WAAU,KACVC,QAAO,IACPC,MAAK,IACLC,KAAI,IACJC,cAAa,IACbC,SAAQA,EAAAA,GAEVC,QAGE,MAAMhB,GAAQiB,EAAAA,EAAAA,IAAI,IACZC,EAAeC,IACnBC,QAAQC,IAAI,kBACZC,EAAUC,MAAMvB,MAAQmB,CAAY,EAKhCK,GAAgBC,EAAAA,EAAAA,IAAQC,EAAAA,GACxBJ,GAAYL,EAAAA,EAAAA,IAAIO,EAAcG,QAG9BC,EAAkBC,UACpB,IAAIC,EAAc,CAAC,EACnBC,OAAOC,OAAOF,EAAYR,EAAUC,aAC9BC,EAAcS,KAAKH,GACzBI,GAAgB,EAGdA,EAAiB,KACnBH,OAAOC,OAAOV,EAAUC,MAAOC,EAAcG,OAAQ,EAGzD,MAAO,CACHL,YACAM,kBACAM,iBACAlC,QACAkB,cAEN,I,QCrFF,MAAMiB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,QFEA,GACE3C,KAAM,gBACNa,WAAY,CACVqB,UAASA,IGPb,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASU,KAEpE,O","sources":["webpack://opencdms-app/./src/views/forms/media-type.vue","webpack://opencdms-app/./src/web-components/forms/media-type.vue","webpack://opencdms-app/./src/web-components/forms/media-type.vue?e205","webpack://opencdms-app/./src/views/forms/media-type.vue?4599"],"sourcesContent":["<template>\n  <div>\n    <MediaType/>\n  </div>\n</template>\n\n<script>\nimport MediaType from '@/web-components/forms/media-type.vue';\n\nexport default {\n  name: 'mediaTypeForm',\n  components: {\n    MediaType\n  },\n};\n</script>\n\n<style>\n</style>\n","<template>\n  <v-card>\n    <v-card-title>Create new 'MediaType'</v-card-title>\n    <v-card-text>\n        <v-form>\n            <v-card-item><v-text-field label=\"id\" v-model=\"mediaType.id\"  hint=\"\" persistent-hint></v-text-field></v-card-item>\n            <v-card-item><v-text-field label=\"name\" v-model=\"mediaType.name\"  hint=\"\" persistent-hint></v-text-field></v-card-item>\n            <v-card-item><v-text-field label=\"description\" v-model=\"mediaType.description\"  hint=\"Type of media uploaded\" persistent-hint></v-text-field></v-card-item>\n        </v-form>\n        <v-btn @click=\"createMediaType\">Create MediaType</v-btn>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport { defineComponent, ref, computed } from 'vue';\nimport { VCard, VCardTitle, VCardText, VCardItem, VForm, VTextField, VSelect, VBtn } from 'vuetify/lib/components';\nimport { onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted, onErrorCaptured} from 'vue';\nimport {useStore} from 'pinia';\nimport {useRepo} from 'pinia-orm';\n\nimport LinkForm from '@/web-components/forms/links';\nimport VueDatePicker from '@/web-components/pickers/date-picker.vue';\n\n\n\n// import model\nimport MediaType from '@/models/MediaType';\n\nexport default defineComponent({\n  name: 'MediaTypeForm',\n  props: {\n  },\n  methods:{\n    parseLinks (links) {\n      let res;\n      if( links && links.length > 0 ){\n        res = JSON.stringify(links);\n      }else{\n        res = '';\n      }\n      return res;\n    }\n  },\n  components: {\n    VCard,\n    VCardTitle,\n    VCardText,\n    VCardItem,\n    VTextField,\n    VSelect,\n    VForm,\n    VBtn,\n    VueDatePicker,\n    LinkForm\n  },\n  setup() {\n\n    // set up links object\n    const links = ref([]);\n    const updateLinks = (updatedLinks) => {\n      console.log(\"updating links\");\n      mediaType.value.links = updatedLinks;\n    }\n\n    // set up repos\n\n    const mediaTypeRepo = useRepo(MediaType);\n    const mediaType = ref(mediaTypeRepo.make());\n\n    // function to create new object and to add to store\n    const createMediaType = async () => {\n        let valueToSave = {};\n        Object.assign(valueToSave,mediaType.value);\n        await mediaTypeRepo.save(valueToSave);\n        resetMediaType();\n    };\n\n    const resetMediaType = () => {\n        Object.assign(mediaType.value, mediaTypeRepo.make() );\n    };\n\n    return {\n        mediaType,\n        createMediaType,\n        resetMediaType,\n        links,\n        updateLinks\n    }\n  }\n});\n</script>\n","import { render } from \"./media-type.vue?vue&type=template&id=44a04393\"\nimport script from \"./media-type.vue?vue&type=script&lang=js\"\nexport * from \"./media-type.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./media-type.vue?vue&type=template&id=61dc024b\"\nimport script from \"./media-type.vue?vue&type=script&lang=js\"\nexport * from \"./media-type.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementBlock","_createVNode","_component_MediaType","_createBlock","_component_v_card","_component_v_card_title","_component_v_card_text","_component_v_form","_component_v_card_item","_component_v_text_field","label","_ctx","id","hint","name","description","_component_v_btn","onClick","defineComponent","props","methods","parseLinks","links","res","length","JSON","stringify","components","VCard","VCardTitle","VCardText","VCardItem","VTextField","VSelect","VForm","VBtn","VueDatePicker","LinkForm","setup","ref","updateLinks","updatedLinks","console","log","mediaType","value","mediaTypeRepo","useRepo","MediaType","make","createMediaType","async","valueToSave","Object","assign","save","resetMediaType","__exports__","render"],"sourceRoot":""}