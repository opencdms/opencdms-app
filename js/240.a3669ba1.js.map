{"version":3,"file":"js/240.a3669ba1.js","mappings":"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","sources":["webpack://opencdms-app/../../../src/components/VSelectionControlGroup/VSelectionControlGroup.tsx","webpack://opencdms-app/../../../src/components/VSelectionControl/VSelectionControl.tsx","webpack://opencdms-app/../../../src/components/VCheckbox/VCheckboxBtn.tsx","webpack://opencdms-app/../../../src/components/VChipGroup/VChipGroup.tsx","webpack://opencdms-app/../../../src/components/VChip/VChip.tsx","webpack://opencdms-app/../../src/composables/delay.ts","webpack://opencdms-app/../../../src/components/VMenu/shared.ts","webpack://opencdms-app/../../../src/components/VOverlay/useActivator.tsx","webpack://opencdms-app/../../src/util/isFixedPosition.ts","webpack://opencdms-app/../../src/util/getScrollParent.ts","webpack://opencdms-app/../../../../src/components/VOverlay/util/point.ts","webpack://opencdms-app/../../../src/components/VOverlay/locationStrategies.ts","webpack://opencdms-app/../../../src/components/VOverlay/requestNewFrame.ts","webpack://opencdms-app/../../../src/components/VOverlay/scrollStrategies.ts","webpack://opencdms-app/../../src/composables/hydration.ts","webpack://opencdms-app/../../src/composables/scopeId.ts","webpack://opencdms-app/../../src/composables/stack.ts","webpack://opencdms-app/../../src/composables/teleport.ts","webpack://opencdms-app/../../src/util/dom.ts","webpack://opencdms-app/../../../src/directives/click-outside/index.ts","webpack://opencdms-app/../../../src/components/VOverlay/VOverlay.tsx","webpack://opencdms-app/../../../src/components/VMenu/VMenu.tsx","webpack://opencdms-app/../../../src/components/VSelect/VSelect.tsx","webpack://opencdms-app/../../../src/components/transitions/dialog-transition.tsx","webpack://opencdms-app/../../src/composables/lazy.ts"],"sourcesContent":["// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps } from '@/composables/density'\nimport { makeThemeProps } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, onScopeDispose, provide, toRef } from 'vue'\nimport { deepEqual, genericComponent, getUid, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\n\nexport interface VSelectionGroupContext {\n  modelValue: Ref<any>\n  forceUpdate: () => void\n  onForceUpdate: (fn: () => void) => void\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: Boolean,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: Boolean,\n    default: true,\n  },\n  multiple: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  name: String,\n  readonly: Boolean,\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeThemeProps(),\n  ...makeDensityProps(),\n}, 'v-selection-control-group')\n\nexport const VSelectionControlGroup = genericComponent()({\n  name: 'VSelectionControlGroup',\n\n  props: {\n    defaultsTarget: {\n      type: String,\n      default: 'VSelectionControl',\n    },\n\n    ...makeSelectionControlGroupProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = getUid()\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`)\n    const name = computed(() => props.name || id.value)\n\n    const updateHandlers = new Set<() => void>()\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn())\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb)\n        onScopeDispose(() => {\n          updateHandlers.delete(cb)\n        })\n      },\n    })\n\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        density: toRef(props, 'density'),\n        error: toRef(props, 'error'),\n        inline: toRef(props, 'inline'),\n        modelValue,\n        multiple: computed(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n        name,\n        falseIcon: toRef(props, 'falseIcon'),\n        trueIcon: toRef(props, 'trueIcon'),\n        readonly: toRef(props, 'readonly'),\n        ripple: toRef(props, 'ripple'),\n        type: toRef(props, 'type'),\n        valueComparator: toRef(props, 'valueComparator'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-selection-control-group',\n          { 'v-selection-control-group--inline': props.inline },\n        ]}\n        role={ props.type === 'radio' ? 'radiogroup' : undefined }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n","// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, inject, nextTick, ref } from 'vue'\nimport {\n  filterInputAttrs,\n  genericComponent,\n  getUid,\n  pick,\n  propsFactory,\n  SUPPORTS_FOCUS_VISIBLE,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { CSSProperties, ExtractPropTypes, Ref, WritableComputedRef } from 'vue'\nimport type { MakeSlots, SlotsToProps } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<any>\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport type VSelectionControlSlots = MakeSlots<{\n  default: []\n  label: [{ label: string | undefined, props: Record<string, unknown> }]\n  input: [SelectionControlSlot]\n}>\n\nexport const makeSelectionControlProps = propsFactory({\n  label: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n\n  ...makeSelectionControlGroupProps(),\n}, 'v-selection-control')\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeSelectionControlProps>> & {\n    'onUpdate:modelValue': ((val: any) => void) | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? val.some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : undefined\n  }))\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon)\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>() => {\n  $props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (val: T) => any\n  } & SlotsToProps<VSelectionControlSlots>\n}>()({\n  name: 'VSelectionControl',\n\n  directives: { Ripple },\n\n  inheritAttrs: false,\n\n  props: makeSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = getUid()\n    const id = computed(() => props.id || `input-${uid}`)\n    const isFocused = ref(false)\n    const isFocusVisible = ref(false)\n    const input = ref<HTMLInputElement>()\n\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value\n      }\n    })\n\n    function onFocus (e: FocusEvent) {\n      isFocused.value = true\n      if (\n        !SUPPORTS_FOCUS_VISIBLE ||\n        (SUPPORTS_FOCUS_VISIBLE && (e.target as HTMLElement).matches(':focus-visible'))\n      ) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onInput (e: Event) {\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate())\n      }\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': props.inline,\n            },\n            densityClasses.value,\n          ]}\n          { ...rootAttrs }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.() }\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n              <input\n                ref={ input }\n                checked={ model.value }\n                disabled={ props.disabled }\n                id={ id.value }\n                onBlur={ onBlur }\n                onFocus={ onFocus }\n                onInput={ onInput }\n                aria-disabled={ props.readonly }\n                type={ props.type }\n                value={ trueValue.value }\n                name={ props.name }\n                aria-checked={ props.type === 'checkbox' ? model.value : undefined }\n                { ...inputAttrs }\n              />\n\n              { slots.input?.({\n                model,\n                textColorClasses,\n                textColorStyles,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              } as SelectionControlSlot) }\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value } clickable>\n              { label }\n            </VLabel>\n          ) }\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n\nexport function filterControlProps (props: ExtractPropTypes<ReturnType<typeof makeSelectionControlProps>>) {\n  return pick(props, Object.keys(VSelectionControl.props) as any)\n}\n","// Components\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport { makeSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ExtractPropTypes } from 'vue'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'v-checkbox-btn')\n\nexport const VCheckboxBtn = genericComponent<VSelectionControlSlots>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (val: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return props.indeterminate\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return props.indeterminate\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => (\n      <VSelectionControl\n        { ...props }\n        v-model={ model.value }\n        class=\"v-checkbox-btn\"\n        type=\"checkbox\"\n        inline\n        onUpdate:modelValue={ onChange }\n        falseIcon={ falseIcon.value }\n        trueIcon={ trueIcon.value }\n        aria-checked={ props.indeterminate ? 'mixed' : undefined }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n\nexport function filterCheckboxBtnProps (props: ExtractPropTypes<ReturnType<typeof makeVCheckboxBtnProps>>) {\n  return pick(props, Object.keys(VCheckboxBtn.props) as any)\n}\n","// Styles\nimport './VChipGroup.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { deepEqual, genericComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const VChipGroup = genericComponent()({\n  name: 'VChipGroup',\n\n  props: {\n    column: Boolean,\n    filter: Boolean,\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n\n    ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'tonal' } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-chip-group',\n          {\n            'v-chip-group--column': props.column,\n          },\n          themeClasses.value,\n        ]}\n      >\n        { slots.default?.({\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value,\n        }) }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n","/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { EventProp, genericComponent } from '@/util'\nimport { computed } from 'vue'\n\n// Types\nimport type { MakeSlots } from '@/util'\n\nexport type VChipSlots = MakeSlots<{\n  default: []\n  label: []\n  prepend: []\n  append: []\n}>\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: {\n      type: Boolean,\n      default: undefined,\n    },\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n\n    onClick: EventProp,\n    onClickOnce: EventProp,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'span' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'tonal' } as const),\n  },\n\n  emits: {\n    'click:close': (e: Event) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n\n    function onCloseClick (e: Event) {\n      isActive.value = false\n\n      emit('click:close', e)\n    }\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppend = !!(slots.append || props.appendIcon || props.appendAvatar)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrepend = !!(slots.prepend || props.prependIcon || props.prependAvatar)\n      const hasColor = !group || group.isSelected.value\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={ [isClickable.value && props.ripple, null] }\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VDefaultsProvider\n              key=\"filter\"\n              defaults={{\n                VIcon: { icon: props.filterIcon },\n              }}\n            >\n              <VExpandXTransition>\n                <div\n                  class=\"v-chip__filter\"\n                  v-show={ group.isSelected.value }\n                >\n                  { slots.filter ? slots.filter() : (<VIcon />) }\n                </div>\n              </VExpandXTransition>\n            </VDefaultsProvider>\n          ) }\n\n          { hasPrepend && (\n            <VDefaultsProvider\n              key=\"prepend\"\n              defaults={{\n                VAvatar: {\n                  image: props.prependAvatar,\n                },\n                VIcon: {\n                  icon: props.prependIcon,\n                },\n              }}\n            >\n              { slots.prepend\n                ? (\n                  <div class=\"v-chip__prepend\">\n                    { slots.prepend() }\n                  </div>\n                )\n                : props.prependAvatar ? (<VAvatar start />)\n                : props.prependIcon ? (<VIcon start />)\n                : undefined\n              }\n            </VDefaultsProvider>\n          ) }\n\n          { slots.default?.({\n            isSelected: group?.isSelected.value,\n            selectedClass: group?.selectedClass.value,\n            select: group?.select,\n            toggle: group?.toggle,\n            value: group?.value.value,\n            disabled: props.disabled,\n          }) ?? props.text }\n\n          { hasAppend && (\n            <VDefaultsProvider\n              key=\"append\"\n              defaults={{\n                VAvatar: {\n                  image: props.appendAvatar,\n                },\n                VIcon: {\n                  icon: props.appendIcon,\n                },\n              }}\n            >\n              { slots.append\n                ? (\n                  <div class=\"v-chip__append\">\n                    { slots.append() }\n                  </div>\n                )\n                : props.appendAvatar ? (<VAvatar end />)\n                : props.appendIcon ? (<VIcon end />)\n                : undefined\n              }\n            </VDefaultsProvider>\n          ) }\n\n          { hasClose && (\n            <VDefaultsProvider\n              key=\"close\"\n              defaults={{\n                VIcon: {\n                  icon: props.closeIcon,\n                  size: 'x-small',\n                },\n              }}\n            >\n              <div\n                class=\"v-chip__close\"\n                aria-label={ t(props.closeLabel) }\n                onClick={ onCloseClick }\n              >\n                { slots.close ? slots.close() : (<VIcon />) }\n              </div>\n            </VDefaultsProvider>\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n","// Utilities\nimport { IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nexport interface DelayProps {\n  closeDelay?: number | string\n  openDelay?: number | string\n}\n\n// Composables\nexport const makeDelayProps = propsFactory({\n  closeDelay: [Number, String],\n  openDelay: [Number, String],\n}, 'delay')\n\nexport function useDelay (props: DelayProps, cb?: (value: boolean) => void) {\n  const delays: Partial<Record<keyof DelayProps, number>> = {}\n  const runDelayFactory = (prop: keyof DelayProps) => (): Promise<boolean> => {\n    // istanbul ignore next\n    if (!IN_BROWSER) return Promise.resolve(true)\n\n    const active = prop === 'openDelay'\n\n    delays.closeDelay && window.clearTimeout(delays.closeDelay)\n    delete delays.closeDelay\n\n    delays.openDelay && window.clearTimeout(delays.openDelay)\n    delete delays.openDelay\n\n    return new Promise(resolve => {\n      const delay = parseInt(props[prop] ?? 0, 10)\n\n      delays[prop] = window.setTimeout(() => {\n        cb?.(active)\n        resolve(active)\n      }, delay)\n    })\n  }\n\n  return {\n    runCloseDelay: runDelayFactory('closeDelay'),\n    runOpenDelay: runDelayFactory('openDelay'),\n  }\n}\n","import type { InjectionKey } from 'vue'\n\ninterface MenuProvide {\n  register (): void\n  unregister (): void\n  closeParents (): void\n}\n\nexport const VMenuSymbol: InjectionKey<MenuProvide> = Symbol.for('vuetify:v-menu')\n","// Composables\nimport { makeDelayProps, useDelay } from '@/composables/delay'\nimport { VMenuSymbol } from '@/components/VMenu/shared'\n\n// Utilities\nimport { getCurrentInstance, IN_BROWSER, isComponentInstance, propsFactory, SUPPORTS_FOCUS_VISIBLE } from '@/util'\nimport {\n  computed,\n  effectScope,\n  inject,\n  nextTick,\n  onScopeDispose,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\n\n// Types\nimport type { DelayProps } from '@/composables/delay'\nimport type {\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n  EffectScope,\n  PropType,\n  Ref,\n} from 'vue'\n\ninterface ActivatorProps extends DelayProps {\n  activator?: 'parent' | string | Element | ComponentPublicInstance\n  activatorProps: Record<string, any>\n\n  openOnClick: boolean | undefined\n  openOnHover: boolean\n  openOnFocus: boolean | undefined\n\n  closeOnContentClick: boolean\n}\n\nexport const makeActivatorProps = propsFactory({\n  activator: [String, Object] as PropType<ActivatorProps['activator']>,\n  activatorProps: {\n    type: Object as PropType<ActivatorProps['activatorProps']>,\n    default: () => ({}),\n  },\n\n  openOnClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined,\n  },\n\n  closeOnContentClick: Boolean,\n\n  ...makeDelayProps(),\n}, 'v-overlay-activator')\n\nexport function useActivator (\n  props: ActivatorProps,\n  { isActive, isTop }: { isActive: Ref<boolean>, isTop: Ref<boolean> }\n) {\n  const activatorEl = ref<HTMLElement>()\n\n  let isHovered = false\n  let isFocused = false\n  let firstEnter = true\n\n  const openOnFocus = computed(() => props.openOnFocus || (props.openOnFocus == null && props.openOnHover))\n  const openOnClick = computed(() => props.openOnClick || (props.openOnClick == null && !props.openOnHover && !openOnFocus.value))\n\n  const { runOpenDelay, runCloseDelay } = useDelay(props, value => {\n    if (\n      value === (\n        (props.openOnHover && isHovered) ||\n        (openOnFocus.value && isFocused)\n      ) && !(props.openOnHover && isActive.value && !isTop.value)\n    ) {\n      if (isActive.value !== value) {\n        firstEnter = true\n      }\n      isActive.value = value\n    }\n  })\n\n  const availableEvents = {\n    click: (e: MouseEvent) => {\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      isActive.value = !isActive.value\n    },\n    mouseenter: (e: MouseEvent) => {\n      isHovered = true\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      runOpenDelay()\n    },\n    mouseleave: (e: MouseEvent) => {\n      isHovered = false\n      runCloseDelay()\n    },\n    focus: (e: FocusEvent) => {\n      if (\n        SUPPORTS_FOCUS_VISIBLE &&\n        !(e.target as HTMLElement).matches(':focus-visible')\n      ) return\n\n      isFocused = true\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n\n      runOpenDelay()\n    },\n    blur: (e: FocusEvent) => {\n      isFocused = false\n      e.stopPropagation()\n\n      runCloseDelay()\n    },\n  }\n\n  const activatorEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (openOnClick.value) {\n      events.click = availableEvents.click\n    }\n    if (props.openOnHover) {\n      events.mouseenter = availableEvents.mouseenter\n      events.mouseleave = availableEvents.mouseleave\n    }\n    if (openOnFocus.value) {\n      events.focus = availableEvents.focus\n      events.blur = availableEvents.blur\n    }\n\n    return events\n  })\n\n  const contentEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        isHovered = true\n        runOpenDelay()\n      }\n      events.mouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null)\n      events.click = () => {\n        isActive.value = false\n        menu?.closeParents()\n      }\n    }\n\n    return events\n  })\n\n  const scrimEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        if (firstEnter) {\n          isHovered = true\n          firstEnter = false\n          runOpenDelay()\n        }\n      }\n      events.mouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    return events\n  })\n\n  watch(isTop, val => {\n    if (val && (\n      (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused)) ||\n      (openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))\n    )) {\n      isActive.value = false\n    }\n  })\n\n  const activatorRef = ref()\n  watchEffect(() => {\n    if (!activatorRef.value) return\n\n    nextTick(() => {\n      const activator = activatorRef.value\n      activatorEl.value = isComponentInstance(activator) ? activator.$el : activator\n    })\n  })\n\n  const vm = getCurrentInstance('useActivator')\n  let scope: EffectScope\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope()\n      scope.run(() => {\n        _useActivator(props, vm, { activatorEl, activatorEvents })\n      })\n    } else if (scope) {\n      scope.stop()\n    }\n  }, { flush: 'post', immediate: true })\n\n  onScopeDispose(() => {\n    scope?.stop()\n  })\n\n  return { activatorEl, activatorRef, activatorEvents, contentEvents, scrimEvents }\n}\n\nfunction _useActivator (\n  props: ActivatorProps,\n  vm: ComponentInternalInstance,\n  { activatorEl, activatorEvents }: Pick<ReturnType<typeof useActivator>, 'activatorEl' | 'activatorEvents'>\n) {\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal)\n      activator && unbindActivatorProps(activator)\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps())\n    }\n  }, { immediate: true })\n\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps()\n  })\n\n  onScopeDispose(() => {\n    unbindActivatorProps()\n  })\n\n  function bindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.addEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      if (_props[k] == null) {\n        el.removeAttribute(k)\n      } else {\n        el.setAttribute(k, _props[k])\n      }\n    })\n  }\n\n  function unbindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.removeEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      el.removeAttribute(k)\n    })\n  }\n\n  function getActivator (selector = props.activator): HTMLElement | undefined {\n    let activator\n    if (selector) {\n      if (selector === 'parent') {\n        let el = vm?.proxy?.$el?.parentNode\n        while (el.hasAttribute('data-no-activator')) {\n          el = el.parentNode\n        }\n        activator = el\n      } else if (typeof selector === 'string') {\n        // Selector\n        activator = document.querySelector(selector)\n      } else if ('$el' in selector) {\n        // Component (ref)\n        activator = selector.$el\n      } else {\n        // HTMLElement | Element\n        activator = selector\n      }\n    }\n\n    // The activator should only be a valid element (Ignore comments and text nodes)\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n    return activatorEl.value\n  }\n}\n","export function isFixedPosition (el?: HTMLElement) {\n  while (el) {\n    if (window.getComputedStyle(el).position === 'fixed') {\n      return true\n    }\n    el = el.offsetParent as HTMLElement\n  }\n  return false\n}\n","export function getScrollParent (el?: HTMLElement) {\n  while (el) {\n    if (hasScrollbar(el)) return el\n    el = el.parentElement!\n  }\n\n  return document.scrollingElement as HTMLElement\n}\n\nexport function getScrollParents (el?: Element | null, stopAt?: Element | null) {\n  const elements: HTMLElement[] = []\n\n  if (stopAt && el && !stopAt.contains(el)) return elements\n\n  while (el) {\n    if (hasScrollbar(el)) elements.push(el as HTMLElement)\n    if (el === stopAt) break\n    el = el.parentElement!\n  }\n\n  return elements\n}\n\nexport function hasScrollbar (el?: Element | null) {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return style.overflowY === 'scroll' || (style.overflowY === 'auto' && el.scrollHeight > el.clientHeight)\n}\n","import type { ParsedAnchor } from '@/util'\nimport type { Box } from '@/util/box'\n\ntype Point = { x: number, y: number }\ndeclare class As<T extends string> {\n  private as: T\n}\ntype ElementPoint = Point & As<'element'>\ntype ViewportPoint = Point & As<'viewport'>\ntype Offset = Point & As<'offset'>\n\n/** Convert a point in local space to viewport space */\nexport function elementToViewport (point: ElementPoint, offset: Offset | Box) {\n  return {\n    x: point.x + offset.x,\n    y: point.y + offset.y,\n  } as ViewportPoint\n}\n\n/** Convert a point in viewport space to local space */\nexport function viewportToElement (point: ViewportPoint, offset: Offset | Box) {\n  return {\n    x: point.x - offset.x,\n    y: point.y - offset.y,\n  } as ElementPoint\n}\n\n/** Get the difference between two points */\nexport function getOffset<T extends Point> (a: T, b: T) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y,\n  } as Offset\n}\n\n/** Convert an anchor object to a point in local space */\nexport function anchorToPoint (anchor: ParsedAnchor, box: Box): ViewportPoint {\n  if (anchor.side === 'top' || anchor.side === 'bottom') {\n    const { side, align } = anchor\n\n    const x: number =\n      align === 'left' ? 0\n      : align === 'center' ? box.width / 2\n      : align === 'right' ? box.width\n      : align\n    const y: number =\n      side === 'top' ? 0\n      : side === 'bottom' ? box.height\n      : side\n\n    return elementToViewport({ x, y } as ElementPoint, box)\n  } else if (anchor.side === 'left' || anchor.side === 'right') {\n    const { side, align } = anchor\n\n    const x: number =\n      side === 'left' ? 0\n      : side === 'right' ? box.width\n      : side\n    const y: number =\n      align === 'top' ? 0\n      : align === 'center' ? box.height / 2\n      : align === 'bottom' ? box.height\n      : align\n\n    return elementToViewport({ x, y } as ElementPoint, box)\n  }\n\n  return elementToViewport({\n    x: box.width / 2,\n    y: box.height / 2,\n  } as ElementPoint, box)\n}\n","// Utilities\nimport { computed, nextTick, onScopeDispose, ref, watch } from 'vue'\nimport {\n  clamp,\n  consoleError,\n  convertToUnit,\n  destructComputed,\n  flipAlign,\n  flipCorner,\n  flipSide,\n  getAxis,\n  getScrollParents,\n  IN_BROWSER,\n  isFixedPosition,\n  nullifyTransforms,\n  parseAnchor,\n  propsFactory,\n} from '@/util'\nimport { Box, getOverflow } from '@/util/box'\nimport { anchorToPoint, getOffset } from './util/point'\n\n// Composables\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { Anchor } from '@/util'\n\nexport interface LocationStrategyData {\n  contentEl: Ref<HTMLElement | undefined>\n  activatorEl: Ref<HTMLElement | undefined>\n  isActive: Ref<boolean>\n  isRtl: Ref<boolean>\n}\n\ntype LocationStrategyFn = (\n  data: LocationStrategyData,\n  props: StrategyProps,\n  contentStyles: Ref<Record<string, string>>\n) => undefined | { updateLocation: (e: Event) => void }\n\nconst locationStrategies = {\n  static: staticLocationStrategy, // specific viewport position, usually centered\n  connected: connectedLocationStrategy, // connected to a certain element\n}\n\nexport interface StrategyProps {\n  locationStrategy: keyof typeof locationStrategies | LocationStrategyFn\n  location: Anchor\n  origin: Anchor | 'auto' | 'overlap'\n  offset?: number | string | number[]\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n}\n\nexport const makeLocationStrategyProps = propsFactory({\n  locationStrategy: {\n    type: [String, Function] as PropType<StrategyProps['locationStrategy']>,\n    default: 'static',\n    validator: (val: any) => typeof val === 'function' || val in locationStrategies,\n  },\n  location: {\n    type: String as PropType<StrategyProps['location']>,\n    default: 'bottom',\n  },\n  origin: {\n    type: String as PropType<StrategyProps['origin']>,\n    default: 'auto',\n  },\n  offset: [Number, String, Array] as PropType<StrategyProps['offset']>,\n}, 'v-overlay-location-strategies')\n\nexport function useLocationStrategies (\n  props: StrategyProps,\n  data: LocationStrategyData\n) {\n  const contentStyles = ref({})\n  const updateLocation = ref<(e: Event) => void>()\n\n  if (IN_BROWSER) {\n    useToggleScope(() => !!(data.isActive.value && props.locationStrategy), reset => {\n      watch(() => props.locationStrategy, reset)\n      onScopeDispose(() => {\n        updateLocation.value = undefined\n      })\n\n      if (typeof props.locationStrategy === 'function') {\n        updateLocation.value = props.locationStrategy(data, props, contentStyles)?.updateLocation\n      } else {\n        updateLocation.value = locationStrategies[props.locationStrategy](data, props, contentStyles)?.updateLocation\n      }\n    })\n\n    window.addEventListener('resize', onResize, { passive: true })\n\n    onScopeDispose(() => {\n      window.removeEventListener('resize', onResize)\n      updateLocation.value = undefined\n    })\n  }\n\n  function onResize (e: Event) {\n    updateLocation.value?.(e)\n  }\n\n  return {\n    contentStyles,\n    updateLocation,\n  }\n}\n\nfunction staticLocationStrategy () {\n  // TODO\n}\n\n/** Get size of element ignoring max-width/max-height */\nfunction getIntrinsicSize (el: HTMLElement) {\n  // const scrollables = new Map<Element, [number, number]>()\n  // el.querySelectorAll('*').forEach(el => {\n  //   const x = el.scrollLeft\n  //   const y = el.scrollTop\n  //   if (x || y) {\n  //     scrollables.set(el, [x, y])\n  //   }\n  // })\n\n  // const initialMaxWidth = el.style.maxWidth\n  // const initialMaxHeight = el.style.maxHeight\n  // el.style.removeProperty('max-width')\n  // el.style.removeProperty('max-height')\n\n  /* eslint-disable-next-line sonarjs/prefer-immediate-return */\n  const contentBox = nullifyTransforms(el)\n\n  contentBox.x -= parseFloat(el.style.left || 0)\n  contentBox.y -= parseFloat(el.style.top || 0)\n\n  // el.style.maxWidth = initialMaxWidth\n  // el.style.maxHeight = initialMaxHeight\n  // scrollables.forEach((position, el) => {\n  //   el.scrollTo(...position)\n  // })\n\n  return contentBox\n}\n\nfunction connectedLocationStrategy (data: LocationStrategyData, props: StrategyProps, contentStyles: Ref<Record<string, string>>) {\n  const activatorFixed = isFixedPosition(data.activatorEl.value)\n  if (activatorFixed) {\n    Object.assign(contentStyles.value, {\n      position: 'fixed',\n    })\n  }\n\n  const { preferredAnchor, preferredOrigin } = destructComputed(() => {\n    const parsedAnchor = parseAnchor(props.location, data.isRtl.value)\n    const parsedOrigin =\n      props.origin === 'overlap' ? parsedAnchor\n      : props.origin === 'auto' ? flipSide(parsedAnchor)\n      : parseAnchor(props.origin, data.isRtl.value)\n\n    // Some combinations of props may produce an invalid origin\n    if (parsedAnchor.side === parsedOrigin.side && parsedAnchor.align === flipAlign(parsedOrigin).align) {\n      return {\n        preferredAnchor: flipCorner(parsedAnchor),\n        preferredOrigin: flipCorner(parsedOrigin),\n      }\n    } else {\n      return {\n        preferredAnchor: parsedAnchor,\n        preferredOrigin: parsedOrigin,\n      }\n    }\n  })\n\n  const [minWidth, minHeight, maxWidth, maxHeight] =\n    (['minWidth', 'minHeight', 'maxWidth', 'maxHeight'] as const).map(key => {\n      return computed(() => {\n        const val = parseFloat(props[key]!)\n        return isNaN(val) ? Infinity : val\n      })\n    })\n\n  const offset = computed(() => {\n    if (Array.isArray(props.offset)) {\n      return props.offset\n    }\n    if (typeof props.offset === 'string') {\n      const offset = props.offset.split(' ').map(parseFloat)\n      if (offset.length < 2) offset.push(0)\n      return offset\n    }\n    return typeof props.offset === 'number' ? [props.offset, 0] : [0, 0]\n  })\n\n  let observe = false\n  const observer = new ResizeObserver(() => {\n    if (observe) updateLocation()\n  })\n\n  watch([data.activatorEl, data.contentEl], ([newActivatorEl, newContentEl], [oldActivatorEl, oldContentEl]) => {\n    if (oldActivatorEl) observer.unobserve(oldActivatorEl)\n    if (newActivatorEl) observer.observe(newActivatorEl)\n\n    if (oldContentEl) observer.unobserve(oldContentEl)\n    if (newContentEl) observer.observe(newContentEl)\n  }, {\n    immediate: true,\n  })\n\n  onScopeDispose(() => {\n    observer.disconnect()\n  })\n\n  // eslint-disable-next-line max-statements\n  function updateLocation () {\n    observe = false\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => observe = true)\n    })\n\n    if (!data.activatorEl.value || !data.contentEl.value) return\n\n    const targetBox = data.activatorEl.value.getBoundingClientRect()\n    const contentBox = getIntrinsicSize(data.contentEl.value)\n    const scrollParents = getScrollParents(data.contentEl.value)\n    const viewportMargin = 12\n\n    if (!scrollParents.length) {\n      scrollParents.push(document.documentElement)\n      if (!(data.contentEl.value.style.top && data.contentEl.value.style.left)) {\n        contentBox.x += parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-x') || 0)\n        contentBox.y += parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-y') || 0)\n      }\n    }\n\n    const viewport = scrollParents.reduce<Box>((box: Box | undefined, el) => {\n      const rect = el.getBoundingClientRect()\n      const scrollBox = new Box({\n        x: el === document.documentElement ? 0 : rect.x,\n        y: el === document.documentElement ? 0 : rect.y,\n        width: el.clientWidth,\n        height: el.clientHeight,\n      })\n\n      if (box) {\n        return new Box({\n          x: Math.max(box.left, scrollBox.left),\n          y: Math.max(box.top, scrollBox.top),\n          width: Math.min(box.right, scrollBox.right) - Math.max(box.left, scrollBox.left),\n          height: Math.min(box.bottom, scrollBox.bottom) - Math.max(box.top, scrollBox.top),\n        })\n      }\n      return scrollBox\n    }, undefined!)\n    viewport.x += viewportMargin\n    viewport.y += viewportMargin\n    viewport.width -= viewportMargin * 2\n    viewport.height -= viewportMargin * 2\n\n    let placement = {\n      anchor: preferredAnchor.value,\n      origin: preferredOrigin.value,\n    }\n\n    function checkOverflow (_placement: typeof placement) {\n      const box = new Box(contentBox)\n      const targetPoint = anchorToPoint(_placement.anchor, targetBox)\n      const contentPoint = anchorToPoint(_placement.origin, box)\n\n      let { x, y } = getOffset(targetPoint, contentPoint)\n\n      switch (_placement.anchor.side) {\n        case 'top': y -= offset.value[0]; break\n        case 'bottom': y += offset.value[0]; break\n        case 'left': x -= offset.value[0]; break\n        case 'right': x += offset.value[0]; break\n      }\n\n      switch (_placement.anchor.align) {\n        case 'top': y -= offset.value[1]; break\n        case 'bottom': y += offset.value[1]; break\n        case 'left': x -= offset.value[1]; break\n        case 'right': x += offset.value[1]; break\n      }\n\n      box.x += x\n      box.y += y\n\n      box.width = Math.min(box.width, maxWidth.value)\n      box.height = Math.min(box.height, maxHeight.value)\n\n      const overflows = getOverflow(box, viewport)\n\n      return { overflows, x, y }\n    }\n\n    let x = 0; let y = 0\n    const available = { x: 0, y: 0 }\n    const flipped = { x: false, y: false }\n    let resets = -1\n    while (true) {\n      if (resets++ > 10) {\n        consoleError('Infinite loop detected in connectedLocationStrategy')\n        break\n      }\n\n      const { x: _x, y: _y, overflows } = checkOverflow(placement)\n\n      x += _x\n      y += _y\n\n      contentBox.x += _x\n      contentBox.y += _y\n\n      // flip\n      {\n        const axis = getAxis(placement.anchor)\n        const hasOverflowX = overflows.x.before || overflows.x.after\n        const hasOverflowY = overflows.y.before || overflows.y.after\n\n        let reset = false\n        ;['x', 'y'].forEach(key => {\n          if (\n            (key === 'x' && hasOverflowX && !flipped.x) ||\n            (key === 'y' && hasOverflowY && !flipped.y)\n          ) {\n            const newPlacement = { anchor: { ...placement.anchor }, origin: { ...placement.origin } }\n            const flip = key === 'x'\n              ? axis === 'y' ? flipAlign : flipSide\n              : axis === 'y' ? flipSide : flipAlign\n            newPlacement.anchor = flip(newPlacement.anchor)\n            newPlacement.origin = flip(newPlacement.origin)\n            const { overflows: newOverflows } = checkOverflow(newPlacement)\n            if (\n              (newOverflows[key].before <= overflows[key].before &&\n                newOverflows[key].after <= overflows[key].after) ||\n              (newOverflows[key].before + newOverflows[key].after <\n                (overflows[key].before + overflows[key].after) / 2)\n            ) {\n              placement = newPlacement\n              reset = flipped[key] = true\n            }\n          }\n        })\n        if (reset) continue\n      }\n\n      // shift\n      if (overflows.x.before) {\n        x += overflows.x.before\n        contentBox.x += overflows.x.before\n      }\n      if (overflows.x.after) {\n        x -= overflows.x.after\n        contentBox.x -= overflows.x.after\n      }\n      if (overflows.y.before) {\n        y += overflows.y.before\n        contentBox.y += overflows.y.before\n      }\n      if (overflows.y.after) {\n        y -= overflows.y.after\n        contentBox.y -= overflows.y.after\n      }\n\n      // size\n      {\n        const overflows = getOverflow(contentBox, viewport)\n        available.x = viewport.width - overflows.x.before - overflows.x.after\n        available.y = viewport.height - overflows.y.before - overflows.y.after\n\n        x += overflows.x.before\n        contentBox.x += overflows.x.before\n        y += overflows.y.before\n        contentBox.y += overflows.y.before\n      }\n\n      break\n    }\n\n    const axis = getAxis(placement.anchor)\n\n    Object.assign(contentStyles.value, {\n      '--v-overlay-anchor-origin': `${placement.anchor.side} ${placement.anchor.align}`,\n      transformOrigin: `${placement.origin.side} ${placement.origin.align}`,\n      // transform: `translate(${pixelRound(x)}px, ${pixelRound(y)}px)`,\n      top: convertToUnit(pixelRound(y)),\n      left: convertToUnit(pixelRound(x)),\n      minWidth: convertToUnit(axis === 'y' ? Math.min(minWidth.value, targetBox.width) : minWidth.value),\n      maxWidth: convertToUnit(pixelCeil(clamp(available.x, minWidth.value === Infinity ? 0 : minWidth.value, maxWidth.value))),\n      maxHeight: convertToUnit(pixelCeil(clamp(available.y, minHeight.value === Infinity ? 0 : minHeight.value, maxHeight.value))),\n    })\n\n    return {\n      available,\n      contentBox,\n    }\n  }\n\n  watch(\n    () => [\n      preferredAnchor.value,\n      preferredOrigin.value,\n      props.offset,\n      props.minWidth,\n      props.minHeight,\n      props.maxWidth,\n      props.maxHeight,\n    ],\n    () => updateLocation(),\n  )\n\n  nextTick(() => {\n    const result = updateLocation()\n\n    // TODO: overflowing content should only require a single updateLocation call\n    // Icky hack to make sure the content is positioned consistently\n    if (!result) return\n    const { available, contentBox } = result\n    if (contentBox.height > available.y) {\n      requestAnimationFrame(() => {\n        updateLocation()\n        requestAnimationFrame(() => {\n          updateLocation()\n        })\n      })\n    }\n  })\n\n  return { updateLocation }\n}\n\nfunction pixelRound (val: number) {\n  return Math.round(val * devicePixelRatio) / devicePixelRatio\n}\n\nfunction pixelCeil (val: number) {\n  return Math.ceil(val * devicePixelRatio) / devicePixelRatio\n}\n","let clean = true\nconst frames = [] as any[]\n\n/**\n * Schedule a task to run in an animation frame on its own\n * This is useful for heavy tasks that may cause jank if all ran together\n */\nexport function requestNewFrame (cb: () => void) {\n  if (!clean || frames.length) {\n    frames.push(cb)\n    run()\n  } else {\n    clean = false\n    cb()\n    run()\n  }\n}\n\nlet raf = -1\nfunction run () {\n  cancelAnimationFrame(raf)\n  raf = requestAnimationFrame(() => {\n    const frame = frames.shift()\n    if (frame) frame()\n\n    if (frames.length) run()\n    else clean = true\n  })\n}\n","// Utilities\nimport { convertToUnit, getScrollParents, hasScrollbar, IN_BROWSER, propsFactory } from '@/util'\nimport { effectScope, nextTick, onScopeDispose, watchEffect } from 'vue'\nimport { requestNewFrame } from './requestNewFrame'\n\n// Types\nimport type { EffectScope, PropType, Ref } from 'vue'\n\nexport interface ScrollStrategyData {\n  root: Ref<HTMLElement | undefined>\n  contentEl: Ref<HTMLElement | undefined>\n  activatorEl: Ref<HTMLElement | undefined>\n  isActive: Ref<boolean>\n  updateLocation: Ref<((e: Event) => void) | undefined>\n}\n\ntype ScrollStrategyFn = (data: ScrollStrategyData, props: StrategyProps, scope: EffectScope) => void\n\nconst scrollStrategies = {\n  none: null,\n  close: closeScrollStrategy,\n  block: blockScrollStrategy,\n  reposition: repositionScrollStrategy,\n}\n\nexport interface StrategyProps {\n  scrollStrategy: keyof typeof scrollStrategies | ScrollStrategyFn\n  contained: boolean | undefined\n}\n\nexport const makeScrollStrategyProps = propsFactory({\n  scrollStrategy: {\n    type: [String, Function] as PropType<StrategyProps['scrollStrategy']>,\n    default: 'block',\n    validator: (val: any) => typeof val === 'function' || val in scrollStrategies,\n  },\n}, 'v-overlay-scroll-strategies')\n\nexport function useScrollStrategies (\n  props: StrategyProps,\n  data: ScrollStrategyData\n) {\n  if (!IN_BROWSER) return\n\n  let scope: EffectScope | undefined\n  watchEffect(async () => {\n    scope?.stop()\n\n    if (!(data.isActive.value && props.scrollStrategy)) return\n\n    scope = effectScope()\n    await nextTick()\n    scope.active && scope.run(() => {\n      if (typeof props.scrollStrategy === 'function') {\n        props.scrollStrategy(data, props, scope!)\n      } else {\n        scrollStrategies[props.scrollStrategy]?.(data, props, scope!)\n      }\n    })\n  })\n\n  onScopeDispose(() => {\n    scope?.stop()\n  })\n}\n\nfunction closeScrollStrategy (data: ScrollStrategyData) {\n  function onScroll (e: Event) {\n    data.isActive.value = false\n  }\n\n  bindScroll(data.activatorEl.value ?? data.contentEl.value, onScroll)\n}\n\nfunction blockScrollStrategy (data: ScrollStrategyData, props: StrategyProps) {\n  const offsetParent = data.root.value?.offsetParent\n  const scrollElements = [...new Set([\n    ...getScrollParents(data.activatorEl.value, props.contained ? offsetParent : undefined),\n    ...getScrollParents(data.contentEl.value, props.contained ? offsetParent : undefined),\n  ])].filter(el => !el.classList.contains('v-overlay-scroll-blocked'))\n  const scrollbarWidth = window.innerWidth - document.documentElement.offsetWidth\n\n  const scrollableParent = (el => hasScrollbar(el) && el)(offsetParent || document.documentElement)\n  if (scrollableParent) {\n    data.root.value!.classList.add('v-overlay--scroll-blocked')\n  }\n\n  scrollElements.forEach((el, i) => {\n    el.style.setProperty('--v-body-scroll-x', convertToUnit(-el.scrollLeft))\n    el.style.setProperty('--v-body-scroll-y', convertToUnit(-el.scrollTop))\n    el.style.setProperty('--v-scrollbar-offset', convertToUnit(scrollbarWidth))\n    el.classList.add('v-overlay-scroll-blocked')\n  })\n\n  onScopeDispose(() => {\n    scrollElements.forEach((el, i) => {\n      const x = parseFloat(el.style.getPropertyValue('--v-body-scroll-x'))\n      const y = parseFloat(el.style.getPropertyValue('--v-body-scroll-y'))\n\n      el.style.removeProperty('--v-body-scroll-x')\n      el.style.removeProperty('--v-body-scroll-y')\n      el.style.removeProperty('--v-scrollbar-offset')\n      el.classList.remove('v-overlay-scroll-blocked')\n\n      el.scrollLeft = -x\n      el.scrollTop = -y\n    })\n    if (scrollableParent) {\n      data.root.value!.classList.remove('v-overlay--scroll-blocked')\n    }\n  })\n}\n\nfunction repositionScrollStrategy (data: ScrollStrategyData, props: StrategyProps, scope: EffectScope) {\n  let slow = false\n  let raf = -1\n  let ric = -1\n\n  function update (e: Event) {\n    requestNewFrame(() => {\n      const start = performance.now()\n      data.updateLocation.value?.(e)\n      const time = performance.now() - start\n      slow = time / (1000 / 60) > 2\n    })\n  }\n\n  ric = (typeof requestIdleCallback === 'undefined' ? (cb: Function) => cb() : requestIdleCallback)(() => {\n    scope.run(() => {\n      bindScroll(data.activatorEl.value ?? data.contentEl.value, e => {\n        if (slow) {\n          // If the position calculation is slow,\n          // defer updates until scrolling is finished.\n          // Browsers usually fire one scroll event per frame so\n          // we just wait until we've got two frames without an event\n          cancelAnimationFrame(raf)\n          raf = requestAnimationFrame(() => {\n            raf = requestAnimationFrame(() => {\n              update(e)\n            })\n          })\n        } else {\n          update(e)\n        }\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(ric)\n    cancelAnimationFrame(raf)\n  })\n}\n\n/** @private */\nfunction bindScroll (el: HTMLElement | undefined, onScroll: (e: Event) => void) {\n  const scrollElements = [document, ...getScrollParents(el)]\n  scrollElements.forEach(el => {\n    el.addEventListener('scroll', onScroll, { passive: true })\n  })\n\n  onScopeDispose(() => {\n    scrollElements.forEach(el => {\n      el.removeEventListener('scroll', onScroll)\n    })\n  })\n}\n","// Utilities\nimport { onMounted, ref } from 'vue'\nimport { IN_BROWSER } from '@/util'\nimport { useDisplay } from '@/composables/display'\n\nexport function useHydration () {\n  if (!IN_BROWSER) return ref(false)\n\n  const { ssr } = useDisplay()\n\n  if (ssr) {\n    const isMounted = ref(false)\n    onMounted(() => {\n      isMounted.value = true\n    })\n    return isMounted\n  } else {\n    return ref(true)\n  }\n}\n","import { getCurrentInstance } from '@/util'\n\nexport function useScopeId () {\n  const vm = getCurrentInstance('useScopeId')\n\n  const scopeId = vm!.vnode.scopeId\n\n  return { scopeId: scopeId ? { [scopeId]: '' } : undefined }\n}\n","import { useToggleScope } from '@/composables/toggleScope'\n\nimport { computed, inject, onScopeDispose, provide, reactive, readonly, ref, toRaw, watchEffect } from 'vue'\nimport { getCurrentInstance } from '@/util'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\nconst StackSymbol: InjectionKey<StackProvide> = Symbol.for('vuetify:stack')\n\ninterface StackProvide {\n  activeChildren: Set<number>\n}\n\nconst globalStack = reactive<[uid: number, zIndex: number][]>([])\n\nexport function useStack (\n  isActive: Readonly<Ref<boolean>>,\n  zIndex: Readonly<Ref<string | number>>,\n  disableGlobalStack: boolean\n) {\n  const vm = getCurrentInstance('useStack')\n  const createStackEntry = !disableGlobalStack\n\n  const parent = inject(StackSymbol, undefined)\n  const stack: StackProvide = reactive({\n    activeChildren: new Set<number>(),\n  })\n  provide(StackSymbol, stack)\n\n  const _zIndex = ref(+zIndex.value)\n  useToggleScope(isActive, () => {\n    const lastZIndex = globalStack.at(-1)?.[1]\n    _zIndex.value = lastZIndex ? lastZIndex + 10 : +zIndex.value\n\n    if (createStackEntry) {\n      globalStack.push([vm.uid, _zIndex.value])\n    }\n\n    parent?.activeChildren.add(vm.uid)\n\n    onScopeDispose(() => {\n      if (createStackEntry) {\n        const idx = toRaw(globalStack).findIndex(v => v[0] === vm.uid)\n        globalStack.splice(idx, 1)\n      }\n\n      parent?.activeChildren.delete(vm.uid)\n    })\n  })\n\n  const globalTop = ref(true)\n  if (createStackEntry) {\n    watchEffect(() => {\n      const _isTop = globalStack.at(-1)?.[0] === vm.uid\n      setTimeout(() => globalTop.value = _isTop)\n    })\n  }\n\n  const localTop = computed(() => !stack.activeChildren.size)\n\n  return {\n    globalTop: readonly(globalTop),\n    localTop,\n    stackStyles: computed(() => ({ zIndex: _zIndex.value })),\n  }\n}\n","// Utilities\nimport { computed, warn } from 'vue'\nimport { IN_BROWSER } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport function useTeleport (target: Ref<boolean | string | Element>) {\n  const teleportTarget = computed(() => {\n    const _target = target.value\n\n    if (_target === true || !IN_BROWSER) return undefined\n\n    const targetElement =\n      _target === false ? document.body\n      : typeof _target === 'string' ? document.querySelector(_target)\n      : _target\n\n    if (targetElement == null) {\n      warn(`Unable to locate target ${_target}`)\n      return undefined\n    }\n\n    let container = targetElement.querySelector(':scope > .v-overlay-container')\n\n    if (!container) {\n      container = document.createElement('div')\n      container.className = 'v-overlay-container'\n      targetElement.appendChild(container)\n    }\n\n    return container\n  })\n\n  return { teleportTarget }\n}\n","/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot (node: Node): null | HTMLDocument | ShadowRoot {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) node = node.parentNode\n\n    // The root parent is the document if the node is attached to the DOM\n    if (node !== document) return null\n\n    return document\n  }\n\n  const root = node.getRootNode()\n\n  // The composed root node is the document if the node is attached to the DOM\n  if (root !== document && root.getRootNode({ composed: true }) !== document) return null\n\n  return root as HTMLDocument | ShadowRoot\n}\n","import { attachedRoot } from '@/util'\nimport type { DirectiveBinding } from 'vue'\n\ninterface ClickOutsideBindingArgs {\n  handler: (e: MouseEvent) => void\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirectiveBinding extends DirectiveBinding {\n  value: ((e: MouseEvent) => void) | ClickOutsideBindingArgs\n}\n\nfunction defaultConditional () {\n  return true\n}\n\nfunction checkEvent (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding): boolean {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  const root = attachedRoot(el)\n  if (\n    typeof ShadowRoot !== 'undefined' &&\n    root instanceof ShadowRoot &&\n    root.host === e.target\n  ) return false\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = ((typeof binding.value === 'object' && binding.value.include) || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(el => el?.contains(e.target as Node))\n}\n\nfunction checkIsActive (e: MouseEvent, binding: ClickOutsideDirectiveBinding): boolean | void {\n  const isActive = (typeof binding.value === 'object' && binding.value.closeConditional) || defaultConditional\n\n  return isActive(e)\n}\n\nfunction directive (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value.handler\n\n  el._clickOutside!.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(() => {\n    checkIsActive(e, binding) && handler && handler(e)\n  }, 0)\n}\n\nfunction handleShadow (el: HTMLElement, callback: Function): void {\n  const root = attachedRoot(el)\n\n  callback(document)\n\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot) {\n    callback(root)\n  }\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  mounted (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    const onClick = (e: Event) => directive(e as MouseEvent, el, binding)\n    const onMousedown = (e: Event) => {\n      el._clickOutside!.lastMousedownWasOutside = checkEvent(e as MouseEvent, el, binding)\n    }\n\n    handleShadow(el, (app: HTMLElement) => {\n      app.addEventListener('click', onClick, true)\n      app.addEventListener('mousedown', onMousedown, true)\n    })\n\n    if (!el._clickOutside) {\n      el._clickOutside = {\n        lastMousedownWasOutside: true,\n      }\n    }\n\n    el._clickOutside[binding.instance!.$.uid] = {\n      onClick,\n      onMousedown,\n    }\n  },\n\n  unmounted (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    if (!el._clickOutside) return\n\n    handleShadow(el, (app: HTMLElement) => {\n      if (!app || !el._clickOutside?.[binding.instance!.$.uid]) return\n\n      const { onClick, onMousedown } = el._clickOutside[binding.instance!.$.uid]!\n\n      app.removeEventListener('click', onClick, true)\n      app.removeEventListener('mousedown', onMousedown, true)\n    })\n\n    delete el._clickOutside[binding.instance!.$.uid]\n  },\n}\n\nexport default ClickOutside\n","// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeActivatorProps, useActivator } from './useActivator'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { makeLocationStrategyProps, useLocationStrategies } from './locationStrategies'\nimport { makeScrollStrategyProps, useScrollStrategies } from './scrollStrategies'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackButton, useRouter } from '@/composables/router'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useHydration } from '@/composables/hydration'\nimport { useRtl } from '@/composables/locale'\nimport { useScopeId } from '@/composables/scopeId'\nimport { useStack } from '@/composables/stack'\nimport { useTeleport } from '@/composables/teleport'\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport {\n  animate,\n  convertToUnit,\n  genericComponent,\n  getScrollParent,\n  IN_BROWSER,\n  pick,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\nimport {\n  computed,\n  mergeProps,\n  ref,\n  Teleport,\n  toHandlers,\n  toRef,\n  Transition,\n  watch,\n} from 'vue'\n\n// Types\nimport type { BackgroundColorData } from '@/composables/color'\nimport type { MakeSlots } from '@/util'\nimport type { ExtractPropTypes, PropType, Ref } from 'vue'\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\nexport type OverlaySlots = MakeSlots<{\n  default: [{ isActive: Ref<boolean> }]\n  activator: [{ isActive: boolean, props: Record<string, any> }]\n}>\n\nexport const makeVOverlayProps = propsFactory({\n  absolute: Boolean,\n  attach: [Boolean, String, Object] as PropType<boolean | string | Element>,\n  closeOnBack: {\n    type: Boolean,\n    default: true,\n  },\n  contained: Boolean,\n  contentClass: null,\n  contentProps: null,\n  disabled: Boolean,\n  noClickAnimation: Boolean,\n  modelValue: Boolean,\n  persistent: Boolean,\n  scrim: {\n    type: [String, Boolean],\n    default: true,\n  },\n  zIndex: {\n    type: [Number, String],\n    default: 2000,\n  },\n\n  ...makeActivatorProps(),\n  ...makeDimensionProps(),\n  ...makeLazyProps(),\n  ...makeLocationStrategyProps(),\n  ...makeScrollStrategyProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps(),\n}, 'v-overlay')\n\nexport const VOverlay = genericComponent<OverlaySlots>()({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: {\n    _disableGlobalStack: Boolean,\n\n    ...makeVOverlayProps(),\n  },\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    afterLeave: () => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const isActive = computed({\n      get: () => model.value,\n      set: v => {\n        if (!(v && props.disabled)) model.value = v\n      },\n    })\n    const { teleportTarget } = useTeleport(computed(() => props.attach || props.contained))\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses, isRtl } = useRtl()\n    const { hasContent, onAfterLeave } = useLazy(props, isActive)\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const { globalTop, localTop, stackStyles } = useStack(isActive, toRef(props, 'zIndex'), props._disableGlobalStack)\n    const { activatorEl, activatorRef, activatorEvents, contentEvents, scrimEvents } = useActivator(props, { isActive, isTop: localTop })\n    const { dimensionStyles } = useDimension(props)\n    const isMounted = useHydration()\n    const { scopeId } = useScopeId()\n\n    watch(() => props.disabled, v => {\n      if (v) isActive.value = false\n    })\n\n    const root = ref<HTMLElement>()\n    const contentEl = ref<HTMLElement>()\n    const { contentStyles, updateLocation } = useLocationStrategies(props, {\n      isRtl,\n      contentEl,\n      activatorEl,\n      isActive,\n    })\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      activatorEl,\n      isActive,\n      updateLocation,\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional () {\n      return isActive.value && globalTop.value\n    }\n\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown)\n      } else {\n        window.removeEventListener('keydown', onKeydown)\n      }\n    }, { immediate: true })\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape' && globalTop.value) {\n        if (!props.persistent) {\n          isActive.value = false\n        } else animateClick()\n      }\n    }\n\n    const router = useRouter()\n    useToggleScope(() => props.closeOnBack, () => {\n      useBackButton(router, next => {\n        if (globalTop.value && isActive.value) {\n          next(false)\n          if (!props.persistent) isActive.value = false\n          else animateClick()\n        } else {\n          next()\n        }\n      })\n    })\n\n    const top = ref<number>()\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      contentEl.value && animate(contentEl.value, [\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          props: mergeProps({\n            ref: activatorRef,\n          }, toHandlers(activatorEvents.value), props.activatorProps),\n        }) }\n\n        { isMounted.value && (\n          <Teleport\n            disabled={ !teleportTarget.value }\n            to={ teleportTarget.value }\n          >\n            { hasContent.value && (\n              <div\n                class={[\n                  'v-overlay',\n                  {\n                    'v-overlay--absolute': props.absolute || props.contained,\n                    'v-overlay--active': isActive.value,\n                    'v-overlay--contained': props.contained,\n                  },\n                  themeClasses.value,\n                  rtlClasses.value,\n                ]}\n                style={[stackStyles.value, { top: convertToUnit(top.value) }]}\n                ref={ root }\n                { ...scopeId }\n                { ...attrs }\n              >\n                <Scrim\n                  color={ scrimColor }\n                  modelValue={ isActive.value && !!props.scrim }\n                  { ...toHandlers(scrimEvents.value) }\n                />\n                <MaybeTransition\n                  appear\n                  persisted\n                  transition={ props.transition }\n                  target={ activatorEl.value }\n                  onAfterLeave={() => { onAfterLeave(); emit('afterLeave') }}\n                >\n                  <div\n                    ref={ contentEl }\n                    v-show={ isActive.value }\n                    v-click-outside={{ handler: onClickOutside, closeConditional, include: () => [activatorEl.value] }}\n                    class={[\n                      'v-overlay__content',\n                      props.contentClass,\n                    ]}\n                    style={[\n                      dimensionStyles.value,\n                      contentStyles.value,\n                    ]}\n                    { ...toHandlers(contentEvents.value) }\n                    { ...props.contentProps }\n                  >\n                    { slots.default?.({ isActive }) }\n                  </div>\n                </MaybeTransition>\n              </div>\n            )}\n          </Teleport>\n        )}\n      </>\n    ))\n\n    return {\n      activatorEl,\n      animateClick,\n      contentEl,\n      globalTop,\n      localTop,\n      updateLocation,\n    }\n  },\n})\n\nexport type VOverlay = InstanceType<typeof VOverlay>\n\nexport function filterVOverlayProps (props: Partial<ExtractPropTypes<ReturnType<typeof makeVOverlayProps>>>) {\n  return pick(props, Object.keys(VOverlay.props) as any)\n}\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, inject, mergeProps, provide, ref, watch } from 'vue'\nimport { genericComponent, getUid, omit, useRender } from '@/util'\nimport { filterVOverlayProps, makeVOverlayProps } from '@/components/VOverlay/VOverlay'\nimport { VMenuSymbol } from './shared'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    id: String,\n\n    ...omit(makeVOverlayProps({\n      closeDelay: 250,\n      closeOnContentClick: true,\n      locationStrategy: 'connected' as const,\n      openDelay: 300,\n      scrim: false,\n      scrollStrategy: 'reposition' as const,\n      transition: { component: VDialogTransition },\n    }), ['absolute']),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = ref(0)\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren.value\n      },\n      unregister () {\n        --openChildren.value\n      },\n      closeParents () {\n        setTimeout(() => {\n          if (!openChildren.value) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister()\n    })\n\n    function onClickOutside () {\n      parent?.closeParents()\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-menu',\n          ]}\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          onClick:outside={ onClickOutside }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root>\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n","// Styles\nimport './VSelect.sass'\n\n// Components\nimport { filterVTextFieldProps, makeVTextFieldProps } from '@/components/VTextField/VTextField'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VDialogTransition } from '@/components/transitions'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/items'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useForm } from '@/composables/form'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, mergeProps, ref } from 'vue'\nimport { deepEqual, genericComponent, omit, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { InternalItem } from '@/composables/items'\nimport type { MakeSlots, SlotsToProps } from '@/util'\nimport type { PropType } from 'vue'\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'v-select')\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = T extends Primitive\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject>\n\nexport const VSelect = genericComponent<new <\n  T,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<T, ReturnObject, Multiple> = Value<T, ReturnObject, Multiple>\n>() => {\n  $props: {\n    items?: readonly T[]\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V\n    'onUpdate:modelValue'?: (val: V) => void\n  } & SlotsToProps<\n    Omit<VInputSlots & VFieldSlots, 'default'> & MakeSlots<{\n      item: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      chip: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      selection: [{ item: InternalItem<T>, index: number }]\n      'prepend-item': []\n      'append-item': []\n      'no-data': []\n    }>\n  >\n}>()({\n  name: 'VSelect',\n\n  props: {\n    ...makeSelectProps(),\n    ...omit(makeVTextFieldProps({\n      modelValue: null,\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({ transition: { component: VDialogTransition } }),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n    'update:menu': (val: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const form = useForm()\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v\n      })\n    })\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !selections.value.some(s => s === item))\n      }\n      return items.value\n    })\n\n    const listRef = ref<VList>()\n\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (\n        (props.hideNoData && !items.value.length) ||\n        props.readonly || form?.isReadonly.value\n      ) return\n\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next')\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev')\n      } else if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n    }\n    function select (item: InternalItem) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n        menu.value = false\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onFocusout (e: FocusEvent) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!((!props.hideNoData || displayItems.value.length) || slots.prepend || slots.append || slots['no-data'])\n      const [textFieldProps] = filterVTextFieldProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ v => { if (v == null) model.value = [] } }\n          validationValue={ model.externalValue }\n          dirty={ model.value.length > 0 }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          readonly\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onFocusout={ onFocusout }\n                    >\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      )) }\n\n                      { slots['prepend-item']?.() }\n\n                      { displayItems.value.map((item, index) => {\n                        if (slots.item) {\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: mergeProps(item.props, { onClick: () => select(item) }),\n                          })\n                        }\n\n                        return (\n                          <VListItem\n                            key={ index }\n                            { ...item.props }\n                            onClick={ () => select(item) }\n                          >\n                            {{\n                              prepend: ({ isSelected }) => props.multiple && !props.hideSelected ? (\n                                <VCheckboxBtn modelValue={ isSelected } ripple={ false } />\n                              ) : undefined,\n                            }}\n                          </VListItem>\n                        )\n                      })}\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  ) }\n                </VMenu>\n\n                { selections.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: item.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ item, index, props: slotProps })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) : (\n                        slots.selection\n                          ? slots.selection({ item, index })\n                          : (\n                            <span class=\"v-select__selection-text\">\n                              { item.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-select__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      )}\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n","// Components\nimport { Transition } from 'vue'\n\n// Utilities\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  standardEasing,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: {\n    target: Object as PropType<HTMLElement>,\n  },\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\nfunction getDimensions (target: HTMLElement, el: HTMLElement) {\n  const targetBox = target.getBoundingClientRect()\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n","// Utilities\nimport { computed, ref, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport { propsFactory } from '@/util'\n\nexport const makeLazyProps = propsFactory({\n  eager: Boolean,\n}, 'lazy')\n\nexport function useLazy (props: { eager: boolean }, active: Ref<boolean>) {\n  const isBooted = ref(false)\n  const hasContent = computed(() => isBooted.value || props.eager || active.value)\n\n  watch(active, () => isBooted.value = true)\n\n  function onAfterLeave () {\n    if (!props.eager) isBooted.value = false\n  }\n\n  return { isBooted, hasContent, onAfterLeave }\n}\n"],"names":["VSelectionControlGroupSymbol","Symbol","for","makeSelectionControlGroupProps","propsFactory","color","String","disabled","Boolean","error","id","inline","falseIcon","IconValue","trueIcon","ripple","type","default","multiple","name","readonly","modelValue","valueComparator","Function","deepEqual","makeThemeProps","makeDensityProps","genericComponent","props","defaultsTarget","emits","val","setup","slots","useProxiedModel","uid","getUid","computed","value","updateHandlers","Set","provide","forceUpdate","forEach","fn","onForceUpdate","cb","add","onScopeDispose","delete","provideDefaults","toRef","density","Array","isArray","useRender","undefined","makeSelectionControlProps","label","trueValue","falseValue","useSelectionControl","group","inject","densityClasses","useDensity","isMultiple","model","get","some","v","set","currentValue","newVal","wrapInArray","filter","item","textColorClasses","textColorStyles","useTextColor","icon","VSelectionControl","directives","Ripple","inheritAttrs","attrs","isFocused","ref","isFocusVisible","input","onFocus","e","SUPPORTS_FOCUS_VISIBLE","target","matches","onBlur","onInput","nextTick","checked","rootAttrs","inputAttrs","filterInputAttrs","makeVCheckboxBtnProps","indeterminate","indeterminateIcon","VCheckboxBtn","onChange","VChipGroupSymbol","column","makeGroupProps","selectedClass","makeTagProps","makeVariantProps","variant","themeClasses","provideTheme","isSelected","select","next","prev","selected","useGroup","VChip","activeClass","appendAvatar","appendIcon","closable","closeIcon","closeLabel","draggable","filterIcon","link","pill","prependAvatar","prependIcon","text","onClick","EventProp","onClickOnce","makeBorderProps","makeElevationProps","makeGroupItemProps","makeRoundedProps","makeRouterProps","makeSizeProps","tag","click","emit","t","useLocale","borderClasses","useBorder","colorClasses","colorStyles","variantClasses","useVariant","elevationClasses","useElevation","roundedClasses","useRounded","sizeClasses","useSize","isActive","useGroupItem","useLink","isLink","isClickable","onCloseClick","navigate","toggle","onKeyDown","key","preventDefault","Tag","hasAppend","append","hasClose","close","hasFilter","hasPrepend","prepend","hasColor","href","genOverlays","VIcon","VAvatar","image","size","makeDelayProps","closeDelay","Number","openDelay","useDelay","delays","runDelayFactory","prop","IN_BROWSER","Promise","resolve","active","window","clearTimeout","delay","parseInt","setTimeout","runCloseDelay","runOpenDelay","VMenuSymbol","makeActivatorProps","activator","Object","activatorProps","openOnClick","openOnHover","openOnFocus","closeOnContentClick","useActivator","isTop","activatorEl","isHovered","firstEnter","availableEvents","stopPropagation","currentTarget","mouseenter","mouseleave","focus","blur","activatorEvents","events","contentEvents","menu","closeParents","scrimEvents","watch","activatorRef","watchEffect","isComponentInstance","$el","vm","getCurrentInstance","scope","effectScope","run","_useActivator","stop","flush","immediate","bindActivatorProps","el","getActivator","_props","entries","_ref3","addEventListener","keys","k","removeAttribute","setAttribute","unbindActivatorProps","_ref4","removeEventListener","selector","proxy","parentNode","hasAttribute","document","querySelector","nodeType","Node","ELEMENT_NODE","oldVal","isFixedPosition","getComputedStyle","position","offsetParent","getScrollParent","hasScrollbar","parentElement","scrollingElement","getScrollParents","stopAt","elements","contains","push","style","overflowY","scrollHeight","clientHeight","elementToViewport","point","offset","x","y","getOffset","a","b","anchorToPoint","anchor","box","side","align","width","height","locationStrategies","static","staticLocationStrategy","connected","connectedLocationStrategy","makeLocationStrategyProps","locationStrategy","validator","location","origin","useLocationStrategies","data","contentStyles","updateLocation","onResize","useToggleScope","reset","passive","getIntrinsicSize","contentBox","nullifyTransforms","parseFloat","left","top","activatorFixed","assign","preferredAnchor","preferredOrigin","destructComputed","parsedAnchor","parseAnchor","isRtl","parsedOrigin","flipSide","flipAlign","flipCorner","minWidth","minHeight","maxWidth","maxHeight","map","isNaN","Infinity","split","length","observe","observer","ResizeObserver","requestAnimationFrame","contentEl","targetBox","getBoundingClientRect","scrollParents","viewportMargin","documentElement","getPropertyValue","viewport","reduce","rect","scrollBox","Box","clientWidth","Math","max","min","right","bottom","placement","checkOverflow","_placement","targetPoint","contentPoint","overflows","getOverflow","available","flipped","resets","consoleError","_x","_y","axis","getAxis","hasOverflowX","before","after","hasOverflowY","newPlacement","flip","newOverflows","transformOrigin","convertToUnit","pixelRound","pixelCeil","clamp","newActivatorEl","newContentEl","oldActivatorEl","oldContentEl","unobserve","disconnect","result","round","devicePixelRatio","ceil","clean","frames","requestNewFrame","raf","cancelAnimationFrame","frame","shift","scrollStrategies","none","closeScrollStrategy","block","blockScrollStrategy","reposition","repositionScrollStrategy","makeScrollStrategyProps","scrollStrategy","useScrollStrategies","async","onScroll","bindScroll","root","scrollElements","contained","classList","scrollbarWidth","innerWidth","offsetWidth","scrollableParent","i","setProperty","scrollLeft","scrollTop","removeProperty","remove","slow","ric","update","start","performance","now","time","requestIdleCallback","cancelIdleCallback","useHydration","ssr","useDisplay","isMounted","onMounted","useScopeId","scopeId","vnode","StackSymbol","globalStack","reactive","useStack","zIndex","disableGlobalStack","createStackEntry","parent","stack","activeChildren","_zIndex","lastZIndex","at","idx","toRaw","findIndex","splice","globalTop","_isTop","localTop","stackStyles","useTeleport","teleportTarget","_target","targetElement","body","warn","container","createElement","className","appendChild","attachedRoot","node","getRootNode","composed","defaultConditional","checkEvent","binding","checkIsActive","ShadowRoot","host","include","closeConditional","directive","handler","_clickOutside","lastMousedownWasOutside","handleShadow","callback","ClickOutside","mounted","onMousedown","app","instance","$","unmounted","Scrim","rest","backgroundColorClasses","backgroundColorStyles","makeVOverlayProps","absolute","attach","closeOnBack","contentClass","contentProps","noClickAnimation","persistent","scrim","makeDimensionProps","makeLazyProps","makeTransitionProps","VOverlay","_disableGlobalStack","afterLeave","rtlClasses","useRtl","hasContent","onAfterLeave","useLazy","scrimColor","useBackgroundColor","dimensionStyles","useDimension","onClickOutside","animateClick","onKeydown","router","useRouter","useBackButton","animate","transform","duration","easing","standardEasing","scrollParent","mergeProps","toHandlers","transition","filterVOverlayProps","pick","VMenu","omit","component","VDialogTransition","overlay","openChildren","register","unregister","overlayProps","args","forwardRefs","ΨopenChildren","makeSelectProps","chips","closableChips","eager","hideNoData","hideSelected","menuIcon","menuProps","noDataText","openOnClear","makeItemsProps","itemChildren","VSelect","makeVTextFieldProps","vTextFieldRef","vMenuRef","_menu","items","transformIn","transformOut","useItems","transformed","form","useForm","selections","find","selection","displayItems","s","listRef","onClear","onMousedownControl","isReadonly","includes","index","relatedTarget","onFocusout","hasChips","chip","hasList","textFieldProps","filterVTextFieldProps","join","externalValue","_ref2","onChipClose","slotProps","title","functions","onBeforeEnter","pointerEvents","visibility","done","sx","sy","speed","getDimensions","animation","opacity","deceleratedEasing","getChildren","finished","then","onAfterEnter","onBeforeLeave","acceleratedEasing","els","children","elBox","originX","originY","anchorSide","anchorOffset","offsetX","offsetY","tsx","tsy","maxs","asa","innerHeight","isBooted"],"sourceRoot":""}