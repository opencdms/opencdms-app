{"version":3,"file":"js/7781.a5c1c4a7.js","mappings":"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","sources":["webpack://opencdms-app/./src/views/deployment.vue","webpack://opencdms-app/./src/web-components/deployment.vue","webpack://opencdms-app/./src/web-components/pickers/select-deployment.vue","webpack://opencdms-app/./src/web-components/pickers/select-deployment.vue?4110","webpack://opencdms-app/./src/web-components/deployment.vue?0e6b","webpack://opencdms-app/./src/views/deployment.vue?03c0","webpack://opencdms-app/../../../src/components/VGrid/VCol.ts","webpack://opencdms-app/../../../src/components/VGrid/VRow.ts"],"sourcesContent":["<template>\n  <div>\n    <deployment title=\"deployment\" content=\"This page is under construction\" description=\"editable view of single sensor deployment\" />\n  </div>\n</template>\n\n<script>\nimport Deployment from './../web-components/deployment.vue';\n\n\nexport default {\n  name: 'MyView',\n  components: {\n    Deployment,\n  },\n};\n</script>\n\n<style>\n</style>\n","<template>\n  <v-container>\n    <v-row>\n    <v-col :cols=\"12\">\n      <v-card>\n        <v-card-title>Select deployment</v-card-title>\n        <v-card-text><select-deployment v-model=\"selectedDeployment\"/></v-card-text>\n      </v-card>\n    </v-col>\n    <!-- </v-row>\n    <v-row> -->\n      <v-col :cols=\"6\">\n        <v-card>\n          <v-card-title>Deployment: {{ $route.params.id }}</v-card-title>\n          <v-card-text><pre>{{deployment}}</pre></v-card-text>\n        </v-card>\n        <v-card>\n          <v-card-title>Associated station</v-card-title>\n          <v-card-text><pre>{{host}}</pre></v-card-text>\n        </v-card>\n      </v-col>\n      <v-col :cols=\"6\" align-self=\"center\">\n        <feature-map :geom=\"geom\" id=\"map\" style=\"height: 400px;\"/>\n        <v-card>\n          <v-card-title>Associated sensor</v-card-title>\n          <v-card-text><pre>{{sensor}}</pre></v-card-text>\n        </v-card>\n        <v-card>\n          <v-card-title>Sensor characteristic</v-card-title>\n          <v-card-text><pre>{{sensorCharacteristics}}</pre></v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col :cols=\"12\">\n        <v-btn @click=\"edit\">Edit</v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { defineComponent, ref, watchEffect, computed, watch } from 'vue';\nimport { VCard, VCardTitle, VCardText, VCardItem, VTabs, VTab, VBtn, VAutocomplete } from 'vuetify/lib/components';\nimport { VContainer, VCol, VRow } from 'vuetify/lib/components';\nimport { onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted, onErrorCaptured} from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nimport {useRepo} from 'pinia-orm';\n\nimport FeatureMap from '@/web-components/maps/feature-map.vue'\n\nimport SelectDeployment from '@/web-components/pickers/select-deployment.vue';\nimport ObserverCharacteristics from '@/models/ObserverCharacteristics';\n\n\n// opencdms imports\nimport Deployment from '@/models/Deployment';\nimport Host from '@/models/Deployment';\nimport Observer from '@/models/Observer';\n\nexport default defineComponent({\n  name: 'sensor',\n  components: {\n    VCard,\n    VCardTitle,\n    VCardText,\n    VCardItem,\n    VTabs,\n    VTab,\n    VBtn,\n    VAutocomplete, VContainer, VCol, VRow,\n    FeatureMap,\n    SelectDeployment\n  },\n  methods: {},\n  setup(props) {\n    // set up varaiables\n    const selectedDeployment = ref(null)\n    const router = useRouter();\n    const geom = ref(null);\n    // set up repos\n    const deploymentRepo = useRepo(Deployment);\n    const deploymentOptions = computed(() => { return deploymentRepo.all() });\n    const deployment = ref(null)\n    const host = ref(null)\n    const sensor = ref(null)\n    const sensorCharacteristics = ref(null)\n\n    // const deploymentCharacteristics = ref(null)\n\n    const edit = () => {\n      router.push('/deployment/'+route.params.id+'/edit');\n    };\n\n    const fetchRecord = async(identifier) => {\n      // load selected deployment\n      deployment.value = await useRepo(Deployment).with('host').with('observer').where('id',route.params.id).first();\n    }\n\n    watch( deployment, () => {\n      if( deployment.value ){\n        var host_id = deployment.value.host_id;\n        var observer_id = deployment.value.observer_id;\n        host.value = deployment.value.host;\n        sensor.value = useRepo(Observer).where('id', observer_id).first();\n        console.log(deployment.value);\n        sensorCharacteristics.value = useRepo(ObserverCharacteristics).with('observed_property').where('observer_id',observer_id).first();\n        //delete deployment.value.host;\n        //delete deployment.value.observer;\n      }\n    });\n\n\n    // add watch to update the geom\n    watch(host, (newVal) => {\n      if( newVal ){\n        const coords = newVal.location.match(/POINT\\(([-\\d\\.]+)\\s+([-\\d\\.]+)\\)/);\n        const latlng = [parseFloat(coords[1]), parseFloat(coords[2])];\n        geom.value = {\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: latlng\n          }\n        }\n      }\n      console.log(geom.value)\n    });\n\n    const route = useRoute();\n    const data = ref([]);\n\n\n    onMounted( async() => {\n      fetchRecord( route.params.id );\n      watchEffect( () => {\n        fetchRecord( route.params.id );\n      });\n      watch( (selectedDeployment), (data) => {\n        router.push('/deployment/'+data.id);\n      } )\n    });\n    onErrorCaptured( () => {});\n    return {deployment, host, sensor, sensorCharacteristics, deploymentOptions, selectedDeployment, geom};\n  }\n\n});\n</script>\n","// component to select station\n<template>\n  <v-autocomplete :items=\"options\" item-title=\"id\" item-value=\"id\" label=\"deployment\" v-model=\"selected\" :hint=\"selected ? selected.name : 'Select an deployment'\" persistent-hint return-object/>\n</template>\n<script>\n  // load deployment\n  import Deployment from '@/models/Deployment'\n  import {useRepo} from 'pinia-orm'\n  import {computed, defineComponent, ref, watch} from 'vue';\n  import {VAutocomplete} from 'vuetify/lib/components';\n  export default defineComponent({\n    name: \"SelectDeployment\",\n    components: {\n      VAutocomplete\n    },\n    emits: [\"update:modelValue\"],\n    setup(props, {emit}) {\n      const selected = ref(null);\n      const options = computed( () => { return useRepo(Deployment).all(); });\n      console.log( options );\n      const optionsHint = computed( () => {});\n      watch( () => selected.value, (newValue) => {\n        emit(\"update:modelValue\", newValue)\n      })\n      return {selected, options};\n    }\n  });\n</script>\n","import { render } from \"./select-deployment.vue?vue&type=template&id=14e5b61f\"\nimport script from \"./select-deployment.vue?vue&type=script&lang=js\"\nexport * from \"./select-deployment.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./deployment.vue?vue&type=template&id=2a729320\"\nimport script from \"./deployment.vue?vue&type=script&lang=js\"\nexport * from \"./deployment.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./deployment.vue?vue&type=template&id=d9586e44\"\nimport script from \"./deployment.vue?vue&type=script&lang=js\"\nexport * from \"./deployment.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<string, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n      default: null,\n      validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n    },\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: classes.value,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\nconst SPACE = ['space-between', 'space-around', 'space-evenly'] as const\n\nfunction makeRowProps <T> (prefix: string, def: () => Prop<T, null>) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + capitalize(val)] = def()\n    return props\n  }, {} as Record<string, Prop<T, null>>)\n}\n\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'] as const\nconst alignValidator = (str: any) => ALIGN_VALUES.includes(str)\nconst alignProps = makeRowProps('align', () => ({\n  type: String as PropType<typeof ALIGN_VALUES[number]>,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE] as const\nconst justifyValidator = (str: any) => JUSTIFY_VALUES.includes(str)\nconst justifyProps = makeRowProps('justify', () => ({\n  type: String as PropType<typeof JUSTIFY_VALUES[number]>,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'] as const\nconst alignContentValidator = (str: any) => ALIGN_CONTENT_VALUES.includes(str)\nconst alignContentProps = makeRowProps('alignContent', () => ({\n  type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const VRow = genericComponent()({\n  name: 'VRow',\n\n  props: {\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String as PropType<typeof ALIGN_VALUES[number]>,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n      default: null,\n      validator: alignContentValidator,\n    },\n\n    ...alignContentProps,\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: ['v-row', classes.value],\n    }, slots.default?.())\n  },\n})\n\nexport type VRow = InstanceType<typeof VRow>\n"],"names":["_createElementBlock","_createVNode","_component_deployment","title","content","description","_createBlock","_component_v_container","_component_v_row","_component_v_col","cols","_component_v_card","_component_v_card_title","_component_v_card_text","_component_select_deployment","_ctx","params","id","_createElementVNode","_component_feature_map","geom","style","_component_v_btn","onClick","_component_v_autocomplete","items","label","hint","name","defineComponent","components","VAutocomplete","emits","setup","props","emit","selected","ref","options","computed","useRepo","Deployment","all","console","log","watch","value","newValue","__exports__","VCard","VCardTitle","VCardText","VCardItem","VTabs","VTab","VBtn","VContainer","VCol","VRow","FeatureMap","SelectDeployment","methods","selectedDeployment","router","useRouter","deploymentRepo","deploymentOptions","deployment","host","sensor","sensorCharacteristics","fetchRecord","async","with","where","route","first","host_id","observer_id","Observer","ObserverCharacteristics","newVal","coords","location","match","latlng","parseFloat","type","geometry","coordinates","useRoute","onMounted","watchEffect","data","push","onErrorCaptured","render","breakpoints","breakpointProps","reduce","val","Boolean","String","Number","default","offsetProps","capitalize","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","ALIGN_SELF_VALUES","genericComponent","alignSelf","validator","str","includes","makeTagProps","slots","classes","classList","forEach","hasColClasses","some","startsWith","h","tag","class","ALIGNMENT","SPACE","makeRowProps","prefix","def","ALIGN_VALUES","alignValidator","alignProps","JUSTIFY_VALUES","justifyValidator","justifyProps","ALIGN_CONTENT_VALUES","alignContentValidator","alignContentProps","align","justify","alignContent","classMap","dense","noGutters"],"sourceRoot":""}