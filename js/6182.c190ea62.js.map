{"version":3,"file":"js/6182.c190ea62.js","mappings":"iQACEA,EAAAA,EAAAA,IAEM,aADJC,EAAAA,EAAAA,IAAeC,I,wBCqCCC,EAAAA,EAAAA,GAEM,OAFDC,MAAM,aAAaC,KAAK,QAAQ,YAAU,U,EAC7CF,EAAAA,EAAAA,GAAqF,OAAhFC,MAAM,sBAAsBE,MAAA,wBAA2B,yBAAmB,G,GAkBjFH,EAAAA,EAAAA,GAEM,OAFDC,MAAM,aAAaC,KAAK,QAAQ,YAAU,U,EAC7CF,EAAAA,EAAAA,GAAoF,OAA/EC,MAAM,sBAAsBE,MAAA,wBAA2B,wBAAkB,G,0VA1DpGC,EAAAA,EAAAA,IAmFcC,EAAAA,KAAAA,C,kBAlFV,IAOQ,EAPRP,EAAAA,EAAAA,IAOQQ,EAAAA,KAAAA,C,kBANR,IAKQ,EALRR,EAAAA,EAAAA,IAKQS,EAAAA,CALAC,KAAM,IAAE,C,kBACd,IAGS,EAHTV,EAAAA,EAAAA,IAGSW,EAAAA,KAAAA,C,kBAFP,IAA2C,EAA3CX,EAAAA,EAAAA,IAA2CY,EAAAA,KAAAA,C,kBAA7B,IAAc,UAAd,qB,OACdZ,EAAAA,EAAAA,IAAgEa,EAAAA,KAAAA,C,kBAAnD,IAAqC,EAArCb,EAAAA,EAAAA,IAAqCc,EAAAA,C,WAAfC,EAAAA,a,qCAAAA,EAAAA,aAAY,I,4DAKnDf,EAAAA,EAAAA,IACQQ,GAEKO,EAAAA,OAAI,WAAjBT,EAAAA,EAAAA,IAqDQE,EAAAA,CAAAQ,IAAAA,GAAA,C,kBApDN,IAmDQ,EAnDRhB,EAAAA,EAAAA,IAmDQS,EAAAA,CAnDAC,KAAM,IAAE,C,kBACd,IAiDS,EAjDTV,EAAAA,EAAAA,IAiDSW,EAAAA,KAAAA,C,kBAhDP,IAA2E,EAA3EX,EAAAA,EAAAA,IAA2EY,EAAAA,KAAAA,C,kBAA7D,IAA+B,UAA/B,mCAA+B,QAAGG,EAAAA,KAAKE,MAAI,M,OAEzDjB,EAAAA,EAAAA,IA6CgBkB,EAAAA,KAAAA,C,kBA5CZ,IA2Cc,EA3CdlB,EAAAA,EAAAA,IA2CcO,EAAAA,KAAAA,C,kBA1CZ,IAyCQ,EAzCRP,EAAAA,EAAAA,IAyCQQ,EAAAA,KAAAA,C,kBAxCN,IAA+E,EAA/ER,EAAAA,EAAAA,IAA+ES,EAAAA,CAAvEC,KAAM,GAAC,C,kBAAE,IAAsD,EAAtDV,EAAAA,EAAAA,IAAsDmB,EAAAA,C,WAAnBJ,EAAAA,iB,qCAAAA,EAAAA,iBAAgB,I,iCACpEf,EAAAA,EAAAA,IAmBQS,EAAAA,CAnBAC,KAAM,GAAC,C,kBACb,IAaiB,EAbjBV,EAAAA,EAAAA,IAaiBoB,EAAAA,CAZd,aAAYL,EAAAA,SACZM,SAAUN,EAAAA,cACV,sBAAoB,EACpBO,OAAQP,EAAAA,WACR,WAAUA,EAAAA,QACV,WAAUA,EAAAA,QACVQ,UAAU,EACXC,KAAK,wBACLC,MAAM,mBACN,qBACA,gC,WACSV,EAAAA,U,qCAAAA,EAAAA,UAAS,I,8EAGpBW,K,OAIF1B,EAAAA,EAAAA,IAkBQS,EAAAA,CAlBAC,KAAM,GAAC,C,kBACb,IAaiB,EAbjBV,EAAAA,EAAAA,IAaiBoB,EAAAA,CAZd,aAAYL,EAAAA,SACZM,SAAUN,EAAAA,YACV,sBAAoB,EACpBO,OAAQP,EAAAA,WACR,WAAUA,EAAAA,QACV,WAAUA,EAAAA,QACVQ,UAAU,EACXC,KAAK,sBACLC,MAAM,iBACN,qBACA,gC,WACSV,EAAAA,Q,qCAAAA,EAAAA,QAAO,I,8EAElBY,K,8EAWhB3B,EAAAA,EAAAA,IAIQQ,EAAAA,KAAAA,C,kBAHN,IAEQ,EAFRR,EAAAA,EAAAA,IAEQS,EAAAA,CAFAC,KAAM,IAAE,C,kBACd,IAAqE,EAArEV,EAAAA,EAAAA,IAAqE4B,EAAAA,CAA7DC,QAAOd,EAAAA,UAAYM,SAAUN,EAAAA,c,mBAAc,IAAU,UAAV,iB,kDAIvDf,EAAAA,EAAAA,IAOQQ,EAAAA,KAAAA,C,kBANN,IAKQ,EALRR,EAAAA,EAAAA,IAKQS,EAAAA,CALAC,KAAM,IAAE,C,kBACd,IAGS,CAHKK,EAAAA,YAAS,WAAvBT,EAAAA,EAAAA,IAGSK,EAAAA,CAAAK,IAAAA,GAAA,C,kBAFP,IAA6B,EAA7BhB,EAAAA,EAAAA,IAA6BY,IAC7BZ,EAAAA,EAAAA,IAA4EkB,EAAAA,KAAAA,C,kBAA/D,IAAiD,EAAjDlB,EAAAA,EAAAA,IAAiD8B,EAAAA,CAA1CC,KAAMhB,EAAAA,UAAYiB,QAASjB,EAAAA,c,kTA8BzDkB,EAAAA,GAAAA,SAAeC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAgBC,EAAAA,GAAaC,EAAAA,IAExE,OAAeC,EAAAA,EAAAA,IAAgB,CAC7BtB,KAAM,UACNuB,WAAY,CACVC,MAAK,IACLC,WAAU,IACVC,UAAS,IACTC,UAAS,IACTC,MAAK,IACLC,KAAI,IACJC,KAAI,IACJC,cAAa,IAAEC,WAAU,IAAEC,KAAI,IAAEC,KAAI,IACrCC,WAAU,IACVC,uBAAsB,IACtBC,cAAa,IACbC,KAAIA,EAAAA,IAENC,QAAS,CAAC,EACVC,MAAMC,GAEJ,MAAMC,GAAWC,EAAAA,EAAAA,IAAI,MACfC,GAAUD,EAAAA,EAAAA,IAAI,MACdE,GAAUF,EAAAA,EAAAA,IAAI,MACdG,GAAeH,EAAAA,EAAAA,KAAI,GACnBI,GAAeJ,EAAAA,EAAAA,IAAI,MACnBK,GAAmBL,EAAAA,EAAAA,IAAI,MACvBM,GAASC,EAAAA,EAAAA,MACTC,GAAgBR,EAAAA,EAAAA,KAAI,GACpBS,GAAcT,EAAAA,EAAAA,KAAI,GAClBU,GAAYV,EAAAA,EAAAA,IAAI,MAChBW,GAAUX,EAAAA,EAAAA,IAAI,MACdY,GAAQC,EAAAA,EAAAA,MAERC,IADOd,EAAAA,EAAAA,IAAI,KACLA,EAAAA,EAAAA,IAAI,OACVe,GAAYf,EAAAA,EAAAA,KAAI,GAGhBgB,GAAWC,EAAAA,EAAAA,IAAQC,EAAAA,GACnBC,GAAcC,EAAAA,EAAAA,KAAS,IAAeJ,EAASK,QAC/CC,GAAOtB,EAAAA,EAAAA,IAAI,MAEXuB,EAAcC,IAClB,MAAMC,EAAMD,EAAKE,UACXC,EAAQH,EAAKI,WAAa,EAC1BC,EAAOL,EAAKM,cAClB,MAAQ,GAAED,KAAQF,KAASF,GAAK,EAG5BM,GAAeX,EAAAA,EAAAA,KAAS,KAAM,CAClCY,OAAQ,CACNC,EAAG,CACDC,KAAM,WACNC,MAAO,CACLC,SAAS,EACTC,KAAM,SAGVC,EAAG,CACDJ,KAAM,SACNK,SAAU,OACVC,MAAO,CACLC,SAAU,GAEZN,MAAO,CACLC,SAAS,EACTC,KAAMhC,EAAiBqC,MAAQrC,EAAiBqC,MAAMrF,KAAO,eAM/DsF,EAAYC,UAChB,IAAIC,EAAY,GAIhB,GAFA/B,EAAI4B,MAAQ,GAEY,OAApBhC,EAAUgC,OAAoC,OAAlB/B,EAAQ+B,MAAgB,CACtD,MAAMI,EAAQpC,EAAUgC,MAAMK,cAAcC,MAAM,KAAK,GACjDC,EAAMtC,EAAQ+B,MAAMK,cAAcC,MAAM,KAAK,GACnDH,EAAa,aAAYK,mBAAmBJ,MAAUI,mBAAmBD,IAC3E,CAEA,MAAME,EAA4BD,mBAAmB7C,EAAiBqC,MAAMU,IACtEC,EAAU,8JAAsJF,IAA4BN,IAElMS,MAAMD,GACHE,MAAKC,IACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,sBAAuBN,EACzC,IAEDE,MAAKpF,IACJ2C,EAAI4B,MAAQvE,EAAKyF,SAASC,KAAIC,IAC5B,MAAMC,EAAW,IAAIC,KAAKF,EAAQG,WAAWC,kBACvC1C,EAAOuC,EAAShB,cAAcC,MAAM,KAAK,GAC/C,MAAO,CACLxB,KAAMA,EACNrD,KAAM2F,EAAQG,WAAWE,aAC1B,GACD,IAGHC,OAAMC,IACLC,QAAQD,MAAMA,EAAM,IAGxBtD,EAAU2B,OAAQ,CAAI,EAGxB,SAAS6B,EAAaC,GACpB,MAAMrB,EAA4BD,mBAAmBsB,GAC/CnB,EAAU,yJAAiJF,IAE3JsB,EAAgB,GAAEpB,+BAClBqB,EAAe,GAAErB,6BAEvBC,MAAMmB,GACHlB,MAAKC,IACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,sBAAuBc,EACzC,IAEDlB,MAAKpF,IACJ8B,EAAQyC,MACL,IAAIsB,KAAK7F,EAAKyF,SAAS,GAAGK,WAAW,qBAAsBlB,cAAcC,MAAM,KAAK,EAAE,IAE1FoB,OAAMC,IACLC,QAAQD,MAAMA,EAAM,IAGxBf,MAAMoB,GACHnB,MAAKC,IACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,sBAAuBc,EACzC,IAEDlB,MAAKpF,IACJ+B,EAAQwC,MACL,IAAIsB,KAAK7F,EAAKyF,SAAS,GAAGK,WAAW,qBAAsBlB,cAAcC,MAAM,KAAK,GACvFjD,EAAS2C,MAAQxC,EAAQwC,KAAK,IAE/B0B,OAAMC,IACLC,QAAQD,MAAMA,EAAM,IAGxB7D,EAAckC,MAAQjC,EAAYiC,OAAQ,CAC5C,CAEA,MAAMiC,EAAc/B,UAElBtB,EAAKoB,OAAQzB,EAAAA,EAAAA,IAAQC,EAAAA,GAAM0D,MAAM,KAAKhE,EAAMiE,OAAOzB,IAAI0B,OAAO,GAGhEC,EAAAA,EAAAA,KAAWnC,UACT+B,EAAa/D,EAAMiE,OAAOzB,KAC1B4B,EAAAA,EAAAA,KAAa,KACXL,EAAa/D,EAAMiE,OAAOzB,GAAI,KAEhC6B,EAAAA,EAAAA,IAAQ7E,GAAgBjC,IACtBmC,EAAO4E,KAAK,iBAAiB/G,EAAKiF,GAAG,KAEvC6B,EAAAA,EAAAA,IAAQ5E,GAAoBlC,IAC1BoG,EAAapG,EAAKiF,GAAG,KAEvB6B,EAAAA,EAAAA,IAAQvE,GAAavC,IACnBgC,EAAauC,MAA4B,MAAnBhC,EAAUgC,OAAkC,MAAjB/B,EAAQ+B,MACzDvC,EAAauC,MAAQ3B,EAAU2B,OAAQ,CAA8B,KAEvEuC,EAAAA,EAAAA,IAAQtE,GAAWxC,IACjBgC,EAAauC,MAA4B,MAAnBhC,EAAUgC,OAAkC,MAAjB/B,EAAQ+B,MACzDvC,EAAauC,MAAQ3B,EAAU2B,OAAQ,CAA8B,GACrE,KAGJyC,EAAAA,EAAAA,KAAiB,SAGjB,MAAMC,GAAYhE,EAAAA,EAAAA,KAAS,KACzB,GAAIN,EAAI4B,MAAO,CAEb,IAAI2C,EAAS,CAEXC,OAAQxE,EAAI4B,MAAMmB,KAAI0B,GAAKA,EAAE/D,OAC7BgE,SAAU,CACR,CACE3H,MAAO,kBACP4H,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,EACbC,qBAAsB,wBACtBC,iBAAkB,wBAClBC,0BAA2B,wBAC3BC,sBAAuB,wBACvBC,qBAAsB,0BACtBC,iBAAkB,wBAClBC,YAAa,EACb/H,KAAM2C,EAAI4B,MAAMmB,KAAI0B,GAAKA,EAAEpH,UAIjC,OAAOkH,CACT,CACE,MAAO,CAAC,CACV,IAGF,MAAO,CAAC/D,OAAMqB,YAAWxB,cAAaf,eAAcC,mBAClDS,MAAKsE,YAAWrD,eAAchB,YAAWQ,aACzCxB,WACAE,UACAC,UACAC,eACAO,YACAC,UACAH,gBACAC,cAEJ,I,QCxUF,MAAM0F,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,QFGA,GACE9I,KAAM,SACNuB,WAAY,CACVwH,YAAWA,IGRf,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O,kJCLE3J,EAAAA,EAAAA,IAA+N4J,EAAAA,CAA9MC,MAAOpJ,EAAAA,QAAS,aAAW,aAAa,aAAW,KAAKU,MAAM,oB,WAA6BV,EAAAA,S,qCAAAA,EAAAA,SAAQ,GAAGS,KAAMT,EAAAA,SAAWA,EAAAA,SAASqJ,cAAgB,8BAA+B,qBAAgB,oB,kFAQhN,GAAe7H,EAAAA,EAAAA,IAAgB,CAC7BtB,KAAM,yBACNuB,WAAY,CACVQ,cAAaA,EAAAA,GAEfqH,MAAO,CAAC,qBACR5G,MAAMC,GAAO,KAAC4G,IACZ,MAAMC,GAAW3G,EAAAA,EAAAA,IAAI,MACf5B,GAAUgD,EAAAA,EAAAA,KAAU,KAAeH,EAAAA,EAAAA,IAAQ2F,EAAAA,GAAkBvF,QACnEiD,QAAQuC,IAAKzI,IACOgD,EAAAA,EAAAA,KAAU,SAI9B,OAHA6D,EAAAA,EAAAA,KAAO,IAAM0B,EAASjE,QAAQoE,IAC5BJ,EAAK,oBAAqBI,EAAS,IAE9B,CAACH,WAAUvI,UACpB,I,QCpBJ,MAAM+H,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASE,KAEpE,O","sources":["webpack://opencdms-app/./src/views/data-station.vue","webpack://opencdms-app/./src/web-components/data-station.vue","webpack://opencdms-app/./src/web-components/data-station.vue?0225","webpack://opencdms-app/./src/views/data-station.vue?c377","webpack://opencdms-app/./src/web-components/pickers/select-observed-property.vue","webpack://opencdms-app/./src/web-components/pickers/select-observed-property.vue?9c62"],"sourcesContent":["<template>\n  <div>\n    <data-station/>\n  </div>\n</template>\n\n<script>\nimport DataStation from './../web-components/data-station.vue';\n\n\nexport default {\n  name: 'MyView',\n  components: {\n    DataStation,\n  },\n};\n</script>\n\n<style>\n</style>\n","<template>\n<v-container>\n    <v-row>\n    <v-col :cols=\"12\">\n      <v-card>\n        <v-card-title>Select station</v-card-title>\n        <v-card-text><select-host v-model=\"selectedHost\"/></v-card-text>\n      </v-card>\n    </v-col>\n    </v-row>\n\n    <v-row>\n    </v-row>\n\n    <v-row v-if='host'>\n      <v-col :cols=\"12\">\n        <v-card>\n          <v-card-title>Select from available data for {{ host.name }}</v-card-title>\n          \n          <v-card-item>\n              <v-container>\n                <v-row>\n                  <v-col :cols=\"4\"><select-observed-property v-model=\"selectedProperty\"/></v-col>\n                  <v-col :cols=\"4\">\n                    <VueDatePicker\n                      :start-date=\"initDate\"\n                      :disabled=\"startDisabled\"\n                      :enable-time-picker=\"false\"\n                      :format=\"dateFormat\"\n                      :min-date=\"minDate\"\n                      :max-date=\"maxDate\"\n                      :teleport=\"true\"\n                      hint=\"Phenomenon start date\"\n                      label=\"phenomenon_start\"\n                      persistent-hint\n                      prevent-min-max-navigation\n                      v-model=\"startDate\"\n                    ></VueDatePicker>\n                    <!-- v-message is not being formatted correctly, therefore manually formatting -->\n                    <div class=\"v-messages\" role=\"alert\" aria-live=\"polite\">\n                      <div class=\"v-messages__message\" style=\"padding-top: 10px;\">Select a start date</div>\n                    </div>\n                  </v-col>\n                  <v-col :cols=\"4\">\n                    <VueDatePicker\n                      :start-date=\"initDate\"\n                      :disabled=\"endDisabled\"\n                      :enable-time-picker=\"false\"\n                      :format=\"dateFormat\"\n                      :min-date=\"minDate\"\n                      :max-date=\"maxDate\"\n                      :teleport=\"true\"\n                      hint=\"Phenomenon end date\"\n                      label=\"phenomenon_end\"\n                      persistent-hint\n                      prevent-min-max-navigation\n                      v-model=\"endDate\"\n                    ></VueDatePicker>\n                    <div class=\"v-messages\" role=\"alert\" aria-live=\"polite\">\n                      <div class=\"v-messages__message\" style=\"padding-top: 10px;\">Select an end date</div>\n                    </div>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-card-item>\n        </v-card>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col :cols=\"12\">\n        <v-btn @click=\"plotChart\" :disabled=\"plotDisabled\">Plot Chart</v-btn>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col :cols=\"12\">\n        <v-card v-if='obsLoaded'>\n          <v-card-title></v-card-title>\n          <v-card-item><Line :data=\"chartData\" :options=\"chartOptions\"/></v-card-item>\n        </v-card>\n      </v-col>\n    </v-row>\n\n</v-container>\n\n\n</template>\n\n<script>\nimport { defineComponent, ref, watchEffect, computed, watch } from 'vue';\nimport { VCard, VCardTitle, VCardText, VCardItem, VTabs, VTab, VBtn, VAutocomplete } from 'vuetify/lib/components';\nimport { VContainer, VCol, VRow } from 'vuetify/lib/components';\nimport { onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted, onErrorCaptured} from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nimport {useRepo} from 'pinia-orm';\n\nimport SelectHost from '@/web-components/pickers/select-host.vue';\nimport SelectObservedProperty from '@/web-components/pickers/select-observed-property.vue';\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport '@vuepic/vue-datepicker/dist/main.css';\n\n// opencdms imports\nimport Host from '@/models/Host';\n\nimport {Line} from 'vue-chartjs';\nimport { Chart, CategoryScale, LinearScale, LineController, LineElement, PointElement} from 'chart.js';\nimport { max } from 'd3';\nChart.register(CategoryScale, LinearScale, LineController, LineElement, PointElement);\n\nexport default defineComponent({\n  name: 'station',\n  components: {\n    VCard,\n    VCardTitle,\n    VCardText,\n    VCardItem,\n    VTabs,\n    VTab,\n    VBtn,\n    VAutocomplete, VContainer, VCol, VRow,\n    SelectHost,\n    SelectObservedProperty,\n    VueDatePicker,\n    Line\n  },\n  methods: {},\n  setup(props) {\n    // set up varaiables\n    const initDate = ref(null)\n    const minDate = ref(null)\n    const maxDate = ref(null)\n    const plotDisabled = ref(true);\n    const selectedHost = ref(null)\n    const selectedProperty = ref(null)\n    const router = useRouter();\n    const startDisabled = ref(true);\n    const endDisabled = ref(true);\n    const startDate = ref(null);\n    const endDate = ref(null);\n    const route = useRoute();\n    const data = ref([]);\n    const obs = ref(null);\n    const obsLoaded = ref(false);\n\n    // set up repos\n    const hostRepo = useRepo(Host);\n    const hostOptions = computed(() => { return hostRepo.all() });\n    const host = ref(null)\n\n    const dateFormat = (date) => {\n      const day = date.getDate();\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      return `${year}-${month}-${day}`;\n    }\n\n    const chartOptions = computed(() => ({\n      scales: {\n        x: {\n          type: \"category\",\n          title: {\n            display: true,\n            text: 'Date'\n          }\n        },\n        y: {\n          type: 'linear',\n          position: 'left',\n          ticks: {\n            stepSize: 1\n          },\n          title: {\n            display: true,\n            text: selectedProperty.value ? selectedProperty.value.name : 'Value'\n          }\n        },\n      }\n    }));\n\n    const plotChart = async () => {\n      let dateRange = '';\n      // Getting an error if we don't initialise obs.value early\n      obs.value = [];  \n      \n      if (startDate.value !== null && endDate.value !== null) {\n        const start = startDate.value.toISOString().split('T')[0];\n        const end = endDate.value.toISOString().split('T')[0];\n        dateRange = `&datetime=${encodeURIComponent(start)}/${encodeURIComponent(end)}`;\n      }\n      \n      const encodedObservedPropertyId = encodeURIComponent(selectedProperty.value.id);\n      const apiUrl = `${process.env.API}/collections/observations/items?f=json&lang=en-US&properties=phenomenon_start,result_value&skipGeometry=true&observed_property_id=${encodedObservedPropertyId}${dateRange}`;\n\n      fetch(apiUrl)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error('API request failed:', apiUrl);\n          }\n        })\n        .then(data => {\n          obs.value = data.features.map(feature => {\n            const datetime = new Date(feature.properties.phenomenon_start);\n            const date = datetime.toISOString().split('T')[0];\n            return {\n              date: date,\n              data: feature.properties.result_value\n            }\n          })\n        })\n\n        .catch(error => {\n          console.error(error);\n        });\n\n      obsLoaded.value = true;\n    }\n \n    function setDateRange(observed_property_id) {\n      const encodedObservedPropertyId = encodeURIComponent(observed_property_id);\n      const apiUrl = `${process.env.API}/collections/observations/items?f=json&lang=en-US&limit=1&properties=phenomenon_start&skipGeometry=true&observed_property_id=${encodedObservedPropertyId}`;\n\n      const firstDateUrl = `${apiUrl}&sortby=%2Bphenomenon_start`;\n      const lastDateUrl = `${apiUrl}&sortby=-phenomenon_start`;\n      \n      fetch(firstDateUrl)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error('API request failed:', firstDateUrl);\n          }\n        })\n        .then(data => {\n          minDate.value = \n            (new Date(data.features[0].properties['phenomenon_start'])).toISOString().split(\"T\")[0];\n        })\n        .catch(error => {\n          console.error(error);\n        });\n      \n      fetch(lastDateUrl)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error('API request failed:', firstDateUrl);\n          }\n        })\n        .then(data => {\n          maxDate.value = \n            (new Date(data.features[0].properties['phenomenon_start'])).toISOString().split(\"T\")[0];\n          initDate.value = maxDate.value;\n          })\n        .catch(error => {\n          console.error(error);\n        });\n      // enable both the start and end date pickers\n      startDisabled.value = endDisabled.value = false;\n    }\n\n    const fetchRecord = async(identifier) => {\n      // load selected host\n      host.value = useRepo(Host).where('id',route.params.id).first();\n    };\n\n    onMounted( async() => {\n      fetchRecord( route.params.id );\n      watchEffect( () => {\n        fetchRecord( route.params.id );\n      });\n      watch( (selectedHost), (data) => {\n        router.push('/data/station/'+data.id);\n      } )\n      watch( (selectedProperty), (data) => {\n        setDateRange(data.id);\n      } )\n      watch( (startDate), (data) => {\n        plotDisabled.value = (startDate.value == null || endDate.value == null);\n        plotDisabled.value ? obsLoaded.value = false : obsLoaded.value = false\n      } )\n      watch( (endDate), (data) => {\n        plotDisabled.value = (startDate.value == null || endDate.value == null);\n        plotDisabled.value ? obsLoaded.value = false : obsLoaded.value = false\n      } )\n\n    });\n    onErrorCaptured( () => {});\n\n\n    const chartData = computed(() => {\n      if (obs.value) {\n        //console.log(obs.value);\n        let retval = {\n          // labels: obs.value.map(d => new Date(d.date)),\n          labels: obs.value.map(d => d.date),\n          datasets: [\n            {\n              label: 'Air temperature',\n              backgroundColor: 'rgba(255, 99, 132, 0.5)',\n              borderColor: 'rgba(255, 99, 132, 1)',\n              borderWidth: 1,\n              pointBackgroundColor: 'rgba(255, 99, 132, 1)',\n              pointBorderColor: 'rgba(255, 99, 132, 1)',\n              pointHoverBackgroundColor: 'rgba(255, 99, 132, 1)',\n              pointHoverBorderColor: 'rgba(255, 99, 132, 1)',\n              hoverBackgroundColor: 'rgba(255, 99, 132, 0.8)',\n              hoverBorderColor: 'rgba(255, 99, 132, 1)',\n              pointRadius: 2,\n              data: obs.value.map(d => d.data)\n            }\n          ]\n        };\n        return retval;\n      } else {\n        return {};\n      }\n    });\n\n    return {host, plotChart, hostOptions, selectedHost, selectedProperty, /*geom,*/\n      obs, chartData, chartOptions, obsLoaded, dateFormat,\n      initDate,\n      minDate,\n      maxDate,\n      plotDisabled,\n      startDate,\n      endDate,\n      startDisabled,\n      endDisabled\n    };\n  }\n\n});\n\n</script>\n","import { render } from \"./data-station.vue?vue&type=template&id=2753ca74\"\nimport script from \"./data-station.vue?vue&type=script&lang=js\"\nexport * from \"./data-station.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./data-station.vue?vue&type=template&id=7777b452\"\nimport script from \"./data-station.vue?vue&type=script&lang=js\"\nexport * from \"./data-station.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// component to select station\n<template>\n  <v-autocomplete :items=\"options\" item-title=\"short_name\" item-value=\"id\" label=\"observed property\" v-model=\"selected\" :hint=\"selected ? selected.standard_name : 'Select an observed property'\" persistent-hint return-object/>\n</template>\n<script>\n  // load host\n  import ObservedProperty from '@/models/ObservedProperty'\n  import {useRepo} from 'pinia-orm'\n  import {computed, defineComponent, ref, watch} from 'vue';\n  import {VAutocomplete} from 'vuetify/lib/components';\n  export default defineComponent({\n    name: \"SelectObservedProperty\",\n    components: {\n      VAutocomplete\n    },\n    emits: [\"update:modelValue\"],\n    setup(props, {emit}) {\n      const selected = ref(null);\n      const options = computed( () => { return useRepo(ObservedProperty).all(); });\n      console.log( options );\n      const optionsHint = computed( () => {});\n      watch( () => selected.value, (newValue) => {\n        emit(\"update:modelValue\", newValue)\n      })\n      return {selected, options};\n    }\n  });\n</script>\n","import { render } from \"./select-observed-property.vue?vue&type=template&id=29982722\"\nimport script from \"./select-observed-property.vue?vue&type=script&lang=js\"\nexport * from \"./select-observed-property.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementBlock","_createVNode","_component_data_station","_createElementVNode","class","role","style","_createBlock","_component_v_container","_component_v_row","_component_v_col","cols","_component_v_card","_component_v_card_title","_component_v_card_text","_component_select_host","_ctx","key","name","_component_v_card_item","_component_select_observed_property","_component_VueDatePicker","disabled","format","teleport","hint","label","_hoisted_1","_hoisted_2","_component_v_btn","onClick","_component_Line","data","options","Chart","CategoryScale","LinearScale","LineController","LineElement","PointElement","defineComponent","components","VCard","VCardTitle","VCardText","VCardItem","VTabs","VTab","VBtn","VAutocomplete","VContainer","VCol","VRow","SelectHost","SelectObservedProperty","VueDatePicker","Line","methods","setup","props","initDate","ref","minDate","maxDate","plotDisabled","selectedHost","selectedProperty","router","useRouter","startDisabled","endDisabled","startDate","endDate","route","useRoute","obs","obsLoaded","hostRepo","useRepo","Host","hostOptions","computed","all","host","dateFormat","date","day","getDate","month","getMonth","year","getFullYear","chartOptions","scales","x","type","title","display","text","y","position","ticks","stepSize","value","plotChart","async","dateRange","start","toISOString","split","end","encodeURIComponent","encodedObservedPropertyId","id","apiUrl","fetch","then","response","ok","json","Error","features","map","feature","datetime","Date","properties","phenomenon_start","result_value","catch","error","console","setDateRange","observed_property_id","firstDateUrl","lastDateUrl","fetchRecord","where","params","first","onMounted","watchEffect","watch","push","onErrorCaptured","chartData","retval","labels","d","datasets","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","hoverBackgroundColor","hoverBorderColor","pointRadius","__exports__","DataStation","render","_component_v_autocomplete","items","standard_name","emits","emit","selected","ObservedProperty","log","newValue"],"sourceRoot":""}