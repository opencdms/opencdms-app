{"version":3,"file":"js/5196.9690a38f.js","mappings":"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","sources":["webpack://opencdms-app/../../../src/components/VAutocomplete/VAutocomplete.tsx","webpack://opencdms-app/../../../src/components/VTabs/VTab.tsx","webpack://opencdms-app/../../../src/components/VSlideGroup/helpers.ts","webpack://opencdms-app/../../../src/components/VSlideGroup/VSlideGroup.tsx","webpack://opencdms-app/../../../src/components/VTabs/VTabs.tsx","webpack://opencdms-app/../../../src/components/VTabs/shared.ts","webpack://opencdms-app/../../src/composables/filter.ts"],"sourcesContent":["// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useForm } from '@/composables/form'\nimport { useItems } from '@/composables/items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue'\nimport { genericComponent, omit, useRender, wrapInArray } from '@/util'\nimport { filterVTextFieldProps, makeVTextFieldProps } from '../VTextField/VTextField'\n\n// Types\nimport type { FilterMatch } from '@/composables/filter'\nimport type { InternalItem } from '@/composables/items'\nimport type { MakeSlots, SlotsToProps } from '@/util'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nfunction highlightResult (text: string, matches: FilterMatch | undefined, length: number) {\n  if (matches == null) return text\n\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-autocomplete__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = T extends Primitive\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject>\n\nexport const VAutocomplete = genericComponent<new <\n  T,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<T, ReturnObject, Multiple> = Value<T, ReturnObject, Multiple>\n>() => {\n  $props: {\n    items?: readonly T[]\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V\n    'onUpdate:modelValue'?: (val: V) => void\n  } & SlotsToProps<\n    Omit<VInputSlots & VFieldSlots, 'default'> & MakeSlots<{\n      item: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      chip: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      selection: [{ item: InternalItem<T>, index: number }]\n      'prepend-item': []\n      'append-item': []\n      'no-data': []\n    }>\n  >\n}>()({\n  name: 'VAutocomplete',\n\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    search: String,\n\n    ...makeFilterProps({ filterKeys: ['title'] }),\n    ...makeSelectProps(),\n    ...omit(makeVTextFieldProps({\n      modelValue: null,\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({ transition: false }),\n  },\n\n  emits: {\n    'update:search': (val: any) => true,\n    'update:modelValue': (val: any) => true,\n    'update:menu': (val: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const isFocused = ref(false)\n    const isPristine = ref(true)\n    const vMenuRef = ref<VMenu>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const form = useForm()\n    const { filteredItems, getMatches } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value))\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v\n      })\n    })\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !selections.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n    const listRef = ref<VList>()\n\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onMousedownControl () {\n      if (\n        (props.hideNoData && !items.value.length) ||\n        props.readonly || form?.isReadonly.value\n      ) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true\n      }\n\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next')\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev')\n      }\n    }\n\n    function onInput (e: InputEvent) {\n      search.value = (e.target as HTMLInputElement).value\n    }\n\n    function onAfterLeave () {\n      if (isFocused.value) isPristine.value = true\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n\n    function onFocusout (e: FocusEvent) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    const isSelecting = ref(false)\n\n    function select (item: InternalItem) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n          search.value = ''\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n\n        isSelecting.value = true\n\n        if (!slots.selection) {\n          search.value = item.title\n        }\n\n        menu.value = false\n        isPristine.value = true\n\n        nextTick(() => (isSelecting.value = false))\n      }\n    }\n\n    watch(isFocused, val => {\n      if (val) {\n        isSelecting.value = true\n        search.value = props.multiple || !!slots.selection ? '' : String(selections.value.at(-1)?.props.title ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        menu.value = false\n        search.value = ''\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!((!props.hideNoData || displayItems.value.length) || slots.prepend || slots.append || slots['no-data'])\n      const [textFieldProps] = filterVTextFieldProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ search.value }\n          onUpdate:modelValue={ v => { if (v == null) model.value = [] } }\n          validationValue={ model.externalValue }\n          dirty={ model.value.length > 0 }\n          onInput={ onInput }\n          class={[\n            'v-autocomplete',\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              [`v-autocomplete--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-autocomplete--selection-slot': !!slots.selection,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          readonly={ props.readonly }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onFocus={ () => isFocused.value = true }\n          onBlur={ () => isFocused.value = false }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-autocomplete__content\"\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                    >\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      )) }\n\n                      { slots['prepend-item']?.() }\n\n                      { displayItems.value.map((item, index) => slots.item?.({\n                        item,\n                        index,\n                        props: mergeProps(item.props, { onClick: () => select(item) }),\n                      }) ?? (\n                        <VListItem\n                          key={ index }\n                          { ...item.props }\n                          onClick={ () => select(item) }\n                        >\n                          {{\n                            prepend: ({ isSelected }) => props.multiple && !props.hideSelected ? (\n                              <VCheckboxBtn modelValue={ isSelected } ripple={ false } />\n                            ) : undefined,\n                            title: () => {\n                              return isPristine.value\n                                ? item.title\n                                : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0)\n                            },\n                          }}\n                        </VListItem>\n                      )) }\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  ) }\n                </VMenu>\n\n                { selections.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  return (\n                    <div key={ item.value } class=\"v-autocomplete__selection\">\n                      { hasChips ? (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: item.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ item, index, props: slotProps })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) : (\n                        slots.selection\n                          ? slots.selection({ item, index })\n                          : (\n                            <span class=\"v-autocomplete__selection-text\">\n                              { item.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-autocomplete__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      )}\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n","// Styles\nimport './VTab.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupItemProps } from '@/composables/group'\nimport { makeRouterProps } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps } from '@/composables/theme'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { animate, genericComponent, pick, standardEasing, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport const VTab = genericComponent()({\n  name: 'VTab',\n\n  props: {\n    fixed: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    stacked: Boolean,\n    title: String,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    color: String,\n    sliderColor: String,\n    hideSlider: Boolean,\n\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n\n    ...makeTagProps(),\n    ...makeRouterProps(),\n    ...makeGroupItemProps({\n      selectedClass: 'v-tab--selected',\n    }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = ref(false)\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    function updateSlider ({ value }: { value: boolean }) {\n      isSelected.value = value\n\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight])\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight]\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, ''],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            '',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const [btnProps] = pick(props, [\n        'href',\n        'to',\n        'replace',\n        'icon',\n        'stacked',\n        'prependIcon',\n        'appendIcon',\n        'ripple',\n        'theme',\n        'disabled',\n        'selectedClass',\n        'value',\n        'color',\n      ])\n\n      return (\n        <VBtn\n          _as=\"VTab\"\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n          ]}\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          active={ false }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          variant=\"text\"\n          rounded={ 0 }\n          { ...btnProps }\n          { ...attrs }\n          onGroup:selected={ updateSlider }\n        >\n          { slots.default ? slots.default() : props.title }\n          { !props.hideSlider && (\n            <div\n              ref={ sliderEl }\n              class={[\n                'v-tab__slider',\n                sliderColorClasses.value,\n              ]}\n              style={ sliderColorStyles.value }\n            />\n          ) }\n        </VBtn>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n","export function bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  currentScrollOffset,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  currentScrollOffset: number\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n  const adjustedOffsetStart = isRtl && isHorizontal ? (contentSize - offsetStart - clientSize) : offsetStart\n\n  const totalSize = containerSize + currentScrollOffset\n  const itemOffset = clientSize + adjustedOffsetStart\n  const additionalOffset = clientSize * 0.4\n\n  if (adjustedOffsetStart <= currentScrollOffset) {\n    currentScrollOffset = Math.max(adjustedOffsetStart - additionalOffset, 0)\n  } else if (totalSize <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalSize - itemOffset - additionalOffset), contentSize - containerSize)\n  }\n\n  return currentScrollOffset\n}\n\nexport function calculateCenteredOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n\n  const offsetCentered = isRtl && isHorizontal\n    ? contentSize - offsetStart - clientSize / 2 - containerSize / 2\n    : offsetStart + clientSize / 2 - containerSize / 2\n\n  return Math.min(contentSize - containerSize, Math.max(0, offsetCentered))\n}\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { useDisplay } from '@/composables'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { useRtl } from '@/composables/locale'\n\n// Utilities\nimport { computed, ref, watch } from 'vue'\nimport { clamp, genericComponent, IN_BROWSER, useRender } from '@/util'\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from './helpers'\n\n// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: [SlideGroupSlot]\n  prev: [SlideGroupSlot]\n  next: [SlideGroupSlot]\n}\n\nexport const VSlideGroup = genericComponent<VSlideGroupSlots>()({\n  name: 'VSlideGroup',\n\n  props: {\n    centerActive: Boolean,\n    direction: {\n      type: String,\n      default: 'horizontal',\n    },\n    symbol: {\n      type: null,\n      default: VSlideGroupSymbol,\n    },\n    nextIcon: {\n      type: IconValue,\n      default: '$next',\n    },\n    prevIcon: {\n      type: IconValue,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: (v: any) => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n\n    ...makeTagProps(),\n    ...makeGroupProps({\n      selectedClass: 'v-slide-group-item--active',\n    }),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { mobile } = useDisplay()\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = ref(false)\n    const scrollOffset = ref(0)\n    const containerSize = ref(0)\n    const contentSize = ref(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value] as HTMLElement\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value,\n              })\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value,\n              })\n            }\n          }\n        })\n      })\n    }\n\n    const disableTransition = ref(false)\n\n    let startTouch = 0\n    let startOffset = 0\n\n    function onTouchstart (e: TouchEvent) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      startOffset = sign * scrollOffset.value\n      startTouch = e.touches[0][sizeProperty]\n      disableTransition.value = true\n    }\n\n    function onTouchmove (e: TouchEvent) {\n      if (!isOverflowing.value) return\n\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      scrollOffset.value = sign * (startOffset + startTouch - e.touches[0][sizeProperty])\n    }\n\n    function onTouchend (e: TouchEvent) {\n      const maxScrollOffset = contentSize.value - containerSize.value\n\n      if (scrollOffset.value < 0 || !isOverflowing.value) {\n        scrollOffset.value = 0\n      } else if (scrollOffset.value >= maxScrollOffset) {\n        scrollOffset.value = maxScrollOffset\n      }\n\n      disableTransition.value = false\n    }\n\n    function onScroll () {\n      if (!containerRef.value) return\n\n      containerRef.value[isHorizontal.value ? 'scrollLeft' : 'scrollTop'] = 0\n    }\n\n    const isFocused = ref(false)\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.value) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item as HTMLElement,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value,\n            })\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.value) return\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          focus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          focus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          focus('next')\n        } else if (e.key === 'ArrowUp') {\n          focus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.value) return\n\n      if (!location) {\n        const focusable = [...contentRef.value.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )].filter(el => !el.hasAttribute('disabled')) as HTMLElement[]\n        focusable[0]?.focus()\n      } else if (location === 'next') {\n        const el = contentRef.value.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('first')\n      } else if (location === 'prev') {\n        const el = contentRef.value.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('last')\n      } else if (location === 'first') {\n        (contentRef.value.firstElementChild as HTMLElement)?.focus()\n      } else if (location === 'last') {\n        (contentRef.value.lastElementChild as HTMLElement)?.focus()\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const newAbsoluteOffset = scrollOffset.value + (location === 'prev' ? -1 : 1) * containerSize.value\n\n      scrollOffset.value = clamp(newAbsoluteOffset, 0, contentSize.value - containerSize.value)\n    }\n\n    const contentStyles = computed(() => {\n      // This adds friction when scrolling the 'wrong' way when at max offset\n      let scrollAmount = scrollOffset.value > contentSize.value - containerSize.value\n        ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value)\n        : -scrollOffset.value\n\n      // This adds friction when scrolling the 'wrong' way when at min offset\n      if (scrollOffset.value <= 0) {\n        scrollAmount = bias(-scrollOffset.value)\n      }\n\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${sign * scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : '',\n      }\n    })\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      return Math.abs(scrollOffset.value) > 0\n    })\n\n    const hasNext = computed(() => {\n      // Check one scroll ahead to know the width of right-most item\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n        ]}\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onClick={ () => scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            style={ contentStyles.value }\n            onTouchstartPassive={ onTouchstart }\n            onTouchmovePassive={ onTouchmove }\n            onTouchendPassive={ onTouchend }\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onClick={ () => scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport { VSlideGroup } from '@/components/VSlideGroup'\nimport { VTab } from './VTab'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeTagProps } from '@/composables/tag'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport type TabItem = string | Record<string, any>\n\nfunction parseItems (items: TabItem[] | undefined) {\n  if (!items) return []\n\n  return items.map(item => {\n    if (typeof item === 'string') return { title: item, value: item }\n\n    return item\n  })\n}\n\nexport const VTabs = genericComponent()({\n  name: 'VTabs',\n\n  props: {\n    alignTabs: {\n      type: String as PropType<'start' | 'title' | 'center' | 'end'>,\n      default: 'start',\n    },\n    color: String,\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n    fixedTabs: Boolean,\n    items: {\n      type: Array as PropType<TabItem[]>,\n      default: () => ([]),\n    },\n    stacked: Boolean,\n    bgColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    sliderColor: String,\n    modelValue: null,\n    mandatory: {\n      type: [Boolean, String] as PropType<boolean | 'force'>,\n      default: 'force',\n    },\n\n    ...makeDensityProps(),\n    ...makeTagProps(),\n  },\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const parsedItems = computed(() => parseItems(props.items))\n    const { densityClasses } = useDensity(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider'),\n      },\n    })\n\n    useRender(() => (\n      <VSlideGroup\n        v-model={ model.value }\n        class={[\n          'v-tabs',\n          `v-tabs--${props.direction}`,\n          `v-tabs--align-tabs-${props.alignTabs}`,\n          {\n            'v-tabs--fixed-tabs': props.fixedTabs,\n            'v-tabs--grow': props.grow,\n            'v-tabs--stacked': props.stacked,\n          },\n          densityClasses.value,\n          backgroundColorClasses.value,\n        ]}\n        style={[\n          { '--v-tabs-height': convertToUnit(props.height) },\n          backgroundColorStyles.value,\n        ]}\n        role=\"tablist\"\n        symbol={ VTabsSymbol }\n        mandatory={ props.mandatory }\n        direction={ props.direction }\n      >\n        { slots.default ? slots.default() : parsedItems.value.map(item => (\n          <VTab { ...item } key={ item.title } />\n        )) }\n      </VSlideGroup>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTabs = InstanceType<typeof VTabs>\n","import type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VTabsSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-tabs')\n","/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { getPropertyFromItem, propsFactory, wrapInArray } from '@/util'\nimport { computed, ref, unref, watchEffect } from 'vue'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\nimport type { InternalItem } from './items'\n\n/**\n * - match without highlight\n * - single match (index), length already known\n * - single match (start, end)\n * - multiple matches (start, end), probably shouldn't overlap\n */\nexport type FilterMatch = boolean | number | [number, number] | [number, number][]\nexport type FilterFunction = (value: string, query: string, item?: any) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n  noFilter?: boolean\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase())\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n  noFilter: Boolean,\n}, 'filter')\n\nexport function filterItems (\n  items: InternalItem[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n    noFilter?: boolean\n  },\n) {\n  const array: { index: number, matches: Record<string, FilterMatch> }[] = []\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    const customMatches: Record<string, FilterMatch> = {}\n    const defaultMatches: Record<string, FilterMatch> = {}\n    let match: FilterMatch = -1\n\n    if (query && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(item)\n\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(item as any, key, item)\n          const keyFilter = options?.customKeyFilter?.[key]\n\n          match = keyFilter\n            ? keyFilter(value, query, item)\n            : filter(value, query, item)\n\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = match\n            else defaultMatches[key] = match\n          } else if (options?.filterMode === 'every') {\n            continue loop\n          }\n        }\n      } else {\n        match = filter(item, query, item)\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = match\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    }\n\n    array.push({ index: i, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter <T extends InternalItem> (\n  props: FilterProps,\n  items: MaybeRef<T[]>,\n  query: Ref<string | undefined>,\n  options?: {\n    filterKeys?: MaybeRef<FilterKeys>\n  }\n) {\n  const strQuery = computed(() => (\n    typeof query?.value !== 'string' &&\n    typeof query?.value !== 'number'\n  ) ? '' : String(query.value))\n\n  const filteredItems: Ref<T[]> = ref([])\n  const filteredMatches: Ref<Map<unknown, Record<string, FilterMatch>>> = ref(new Map())\n\n  watchEffect(() => {\n    filteredItems.value = []\n    filteredMatches.value = new Map()\n\n    const transformedItems = unref(items)\n    const results = filterItems(\n      transformedItems,\n      strQuery.value,\n      {\n        customKeyFilter: props.customKeyFilter,\n        default: props.customFilter,\n        filterKeys: unref(options?.filterKeys) ?? props.filterKeys,\n        filterMode: props.filterMode,\n        noFilter: props.noFilter,\n      },\n    )\n\n    results.forEach(({ index, matches }) => {\n      const item = transformedItems[index]\n      filteredItems.value.push(item)\n      filteredMatches.value.set(item.value, matches)\n    })\n  })\n\n  function getMatches (item: T) {\n    return filteredMatches.value.get(item.value)\n  }\n\n  return { filteredItems, filteredMatches, getMatches }\n}\n"],"names":["highlightResult","text","matches","length","Array","isArray","Error","substr","VAutocomplete","genericComponent","name","props","search","String","makeFilterProps","filterKeys","makeSelectProps","omit","makeVTextFieldProps","modelValue","makeTransitionProps","transition","emits","val","setup","slots","t","useLocale","vTextFieldRef","ref","isFocused","isPristine","vMenuRef","_menu","useProxiedModel","menu","computed","get","value","set","v","ΨopenChildren","items","transformIn","transformOut","useItems","model","wrapInArray","transformed","multiple","form","useForm","filteredItems","getMatches","useFilter","undefined","selections","map","find","item","valueComparator","displayItems","hideSelected","filter","filteredItem","some","s","selected","selection","listRef","onClear","e","openOnClear","onMousedownControl","hideNoData","readonly","isReadonly","onKeydown","includes","key","preventDefault","focus","onInput","target","onAfterLeave","onFocusin","onFocusout","relatedTarget","isSelecting","select","index","findIndex","splice","title","nextTick","watch","at","useRender","hasChips","chips","chip","hasList","prepend","append","textFieldProps","filterVTextFieldProps","externalValue","menuIcon","default","eager","menuProps","noDataText","mergeProps","onClick","_ref2","isSelected","onChipClose","stopPropagation","slotProps","VChip","closable","closableChips","size","forwardRefs","VTab","fixed","Boolean","icon","Function","Object","prependIcon","IconValue","appendIcon","stacked","ripple","type","color","sliderColor","hideSlider","direction","makeTagProps","makeRouterProps","makeGroupItemProps","selectedClass","makeThemeProps","attrs","textColorClasses","sliderColorClasses","textColorStyles","sliderColorStyles","useTextColor","isHorizontal","rootEl","sliderEl","updateSlider","prevEl","$el","parentElement","querySelector","nextEl","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","Math","sign","abs","scale","max","initialScale","sigma","animate","backgroundColor","transform","transformOrigin","fill","duration","easing","standardEasing","btnProps","pick","VTabsSymbol","bias","c","x","calculateUpdatedOffset","selectedElement","containerSize","contentSize","isRtl","currentScrollOffset","clientSize","clientWidth","clientHeight","offsetStart","offsetLeft","offsetTop","adjustedOffsetStart","totalSize","itemOffset","additionalOffset","min","calculateCenteredOffset","offsetCentered","VSlideGroupSymbol","Symbol","for","VSlideGroup","centerActive","symbol","nextIcon","prevIcon","showArrows","validator","makeGroupProps","useRtl","mobile","useDisplay","group","useGroup","isOverflowing","scrollOffset","resizeRef","containerRef","contentRect","containerRect","useResizeObserver","contentRef","firstSelectedIndex","id","lastSelectedIndex","IN_BROWSER","frame","cancelAnimationFrame","requestAnimationFrame","sizeProperty","children","disableTransition","startTouch","startOffset","onTouchstart","touches","onTouchmove","onTouchend","maxScrollOffset","onScroll","el","composedPath","onFocus","contains","location","nextElementSibling","previousElementSibling","firstElementChild","lastElementChild","focusable","querySelectorAll","hasAttribute","scrollTo","newAbsoluteOffset","clamp","contentStyles","scrollAmount","willChange","next","prev","hasAffixes","hasPrev","hasNext","parseItems","VTabs","alignTabs","fixedTabs","bgColor","grow","height","Number","mandatory","makeDensityProps","parsedItems","densityClasses","useDensity","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","provideDefaults","convertToUnit","defaultFilter","query","toString","toLocaleLowerCase","indexOf","propsFactory","customFilter","customKeyFilter","filterMode","noFilter","filterItems","options","array","keys","customFiltersLength","loop","i","customMatches","defaultMatches","match","getPropertyFromItem","keyFilter","defaultMatchesLength","customMatchesLength","push","strQuery","filteredMatches","Map","watchEffect","transformedItems","unref","results","forEach","_ref"],"sourceRoot":""}