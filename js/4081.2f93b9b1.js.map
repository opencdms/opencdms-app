{"version":3,"file":"js/4081.2f93b9b1.js","mappings":"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","sources":["webpack://opencdms-app/./src/views/experimental/select-host.vue","webpack://opencdms-app/./src/web-components/pickers/select-observed-property.vue","webpack://opencdms-app/./src/web-components/pickers/select-observed-property.vue?9c62","webpack://opencdms-app/./src/views/experimental/select-host.vue?3d72","webpack://opencdms-app/./src/web-components/pickers/select-host.vue","webpack://opencdms-app/./src/web-components/pickers/select-host.vue?6cbd","webpack://opencdms-app/../../../src/components/VAutocomplete/VAutocomplete.tsx","webpack://opencdms-app/../../src/composables/filter.ts"],"sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <select-host/>\n      <select-observed-property/>\n      <VueDatePicker range/>\n    </v-row>\n    <v-row>\n      <v-card v-if='obsLoaded'>\n        <v-card-title>Example line plot</v-card-title>\n        <v-card-item><Line :data=\"chartData\"/></v-card-item>\n      </v-card>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import SelectHost from '@/web-components/pickers/select-host.vue';\n  import SelectObservedProperty from '@/web-components/pickers/select-observed-property.vue';\n  import SelectDate from '@/web-components/pickers/date-picker.vue';\n\n  import {VContainer, VRow} from 'vuetify/lib/components';\n\n  import {ref} from 'vue';\n\n  import VueDatePicker from '@vuepic/vue-datepicker';\n  import '@vuepic/vue-datepicker/dist/main.css'\n\n\n  export default {\n    name: '',\n    components: {\n      SelectHost,\n      SelectObservedProperty,\n      SelectDate, VueDatePicker,\n      VContainer, VRow\n    },\n    setup() {\n    const date = ref();\n    return {\n      date\n    }\n  }\n  };\n</script>\n","// component to select station\n<template>\n  <v-autocomplete :items=\"options\" item-title=\"short_name\" item-value=\"id\" label=\"observed property\" v-model=\"selected\" :hint=\"selected ? selected.standard_name : 'Select an observed property'\" persistent-hint return-object/>\n</template>\n<script>\n  // load host\n  import ObservedProperty from '@/models/ObservedProperty'\n  import {useRepo} from 'pinia-orm'\n  import {computed, defineComponent, ref, watch} from 'vue';\n  import {VAutocomplete} from 'vuetify/lib/components';\n  export default defineComponent({\n    name: \"SelectObservedProperty\",\n    components: {\n      VAutocomplete\n    },\n    emits: [\"update:modelValue\"],\n    setup(props, {emit}) {\n      const selected = ref(null);\n      const options = computed( () => { return useRepo(ObservedProperty).all(); });\n      console.log( options );\n      const optionsHint = computed( () => {});\n      watch( () => selected.value, (newValue) => {\n        emit(\"update:modelValue\", newValue)\n      })\n      return {selected, options};\n    }\n  });\n</script>\n","import { render } from \"./select-observed-property.vue?vue&type=template&id=29982722\"\nimport script from \"./select-observed-property.vue?vue&type=script&lang=js\"\nexport * from \"./select-observed-property.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./select-host.vue?vue&type=template&id=14ebe758\"\nimport script from \"./select-host.vue?vue&type=script&lang=js\"\nexport * from \"./select-host.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// component to select station\n<template>\n  <v-autocomplete :items=\"options\" item-title=\"name\" item-value=\"id\" label=\"host\" v-model=\"selected\" :hint=\"selected ? selected.name : 'Select a host'\" persistent-hint return-object/>\n</template>\n<script>\n  // load host\n  import Host from '@/models/Host'\n  import {useRepo} from 'pinia-orm'\n  import {computed, defineComponent, ref, watch} from 'vue';\n  import {VAutocomplete} from 'vuetify/lib/components';\n  export default defineComponent({\n    name: \"SelectHost\",\n    components: {\n      VAutocomplete\n    },\n    emits: [\"update:modelValue\"],\n    setup(props, {emit}) {\n      const selected = ref(null);\n      const options = computed( () => { return useRepo(Host).all(); });\n      console.log( options );\n      const optionsHint = computed( () => {});\n      watch( () => selected.value, (newValue) => {\n        emit(\"update:modelValue\", newValue)\n      })\n      return {selected, options};\n    }\n  });\n</script>\n","import { render } from \"./select-host.vue?vue&type=template&id=173ea9cf\"\nimport script from \"./select-host.vue?vue&type=script&lang=js\"\nexport * from \"./select-host.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/opencdms-app/opencdms-app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useForm } from '@/composables/form'\nimport { useItems } from '@/composables/items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue'\nimport { genericComponent, omit, useRender, wrapInArray } from '@/util'\nimport { filterVTextFieldProps, makeVTextFieldProps } from '../VTextField/VTextField'\n\n// Types\nimport type { FilterMatch } from '@/composables/filter'\nimport type { InternalItem } from '@/composables/items'\nimport type { MakeSlots, SlotsToProps } from '@/util'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nfunction highlightResult (text: string, matches: FilterMatch | undefined, length: number) {\n  if (matches == null) return text\n\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-autocomplete__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = T extends Primitive\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject>\n\nexport const VAutocomplete = genericComponent<new <\n  T,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<T, ReturnObject, Multiple> = Value<T, ReturnObject, Multiple>\n>() => {\n  $props: {\n    items?: readonly T[]\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V\n    'onUpdate:modelValue'?: (val: V) => void\n  } & SlotsToProps<\n    Omit<VInputSlots & VFieldSlots, 'default'> & MakeSlots<{\n      item: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      chip: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      selection: [{ item: InternalItem<T>, index: number }]\n      'prepend-item': []\n      'append-item': []\n      'no-data': []\n    }>\n  >\n}>()({\n  name: 'VAutocomplete',\n\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    search: String,\n\n    ...makeFilterProps({ filterKeys: ['title'] }),\n    ...makeSelectProps(),\n    ...omit(makeVTextFieldProps({\n      modelValue: null,\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({ transition: false }),\n  },\n\n  emits: {\n    'update:search': (val: any) => true,\n    'update:modelValue': (val: any) => true,\n    'update:menu': (val: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const isFocused = ref(false)\n    const isPristine = ref(true)\n    const vMenuRef = ref<VMenu>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const form = useForm()\n    const { filteredItems, getMatches } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value))\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v\n      })\n    })\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !selections.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n    const listRef = ref<VList>()\n\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onMousedownControl () {\n      if (\n        (props.hideNoData && !items.value.length) ||\n        props.readonly || form?.isReadonly.value\n      ) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true\n      }\n\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next')\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev')\n      }\n    }\n\n    function onInput (e: InputEvent) {\n      search.value = (e.target as HTMLInputElement).value\n    }\n\n    function onAfterLeave () {\n      if (isFocused.value) isPristine.value = true\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n\n    function onFocusout (e: FocusEvent) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    const isSelecting = ref(false)\n\n    function select (item: InternalItem) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n          search.value = ''\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n\n        isSelecting.value = true\n\n        if (!slots.selection) {\n          search.value = item.title\n        }\n\n        menu.value = false\n        isPristine.value = true\n\n        nextTick(() => (isSelecting.value = false))\n      }\n    }\n\n    watch(isFocused, val => {\n      if (val) {\n        isSelecting.value = true\n        search.value = props.multiple || !!slots.selection ? '' : String(selections.value.at(-1)?.props.title ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        menu.value = false\n        search.value = ''\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!((!props.hideNoData || displayItems.value.length) || slots.prepend || slots.append || slots['no-data'])\n      const [textFieldProps] = filterVTextFieldProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ search.value }\n          onUpdate:modelValue={ v => { if (v == null) model.value = [] } }\n          validationValue={ model.externalValue }\n          dirty={ model.value.length > 0 }\n          onInput={ onInput }\n          class={[\n            'v-autocomplete',\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              [`v-autocomplete--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-autocomplete--selection-slot': !!slots.selection,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          readonly={ props.readonly }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onFocus={ () => isFocused.value = true }\n          onBlur={ () => isFocused.value = false }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-autocomplete__content\"\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                    >\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      )) }\n\n                      { slots['prepend-item']?.() }\n\n                      { displayItems.value.map((item, index) => slots.item?.({\n                        item,\n                        index,\n                        props: mergeProps(item.props, { onClick: () => select(item) }),\n                      }) ?? (\n                        <VListItem\n                          key={ index }\n                          { ...item.props }\n                          onClick={ () => select(item) }\n                        >\n                          {{\n                            prepend: ({ isSelected }) => props.multiple && !props.hideSelected ? (\n                              <VCheckboxBtn modelValue={ isSelected } ripple={ false } />\n                            ) : undefined,\n                            title: () => {\n                              return isPristine.value\n                                ? item.title\n                                : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0)\n                            },\n                          }}\n                        </VListItem>\n                      )) }\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  ) }\n                </VMenu>\n\n                { selections.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  return (\n                    <div key={ item.value } class=\"v-autocomplete__selection\">\n                      { hasChips ? (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: item.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ item, index, props: slotProps })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) : (\n                        slots.selection\n                          ? slots.selection({ item, index })\n                          : (\n                            <span class=\"v-autocomplete__selection-text\">\n                              { item.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-autocomplete__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      )}\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n","/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { getPropertyFromItem, propsFactory, wrapInArray } from '@/util'\nimport { computed, ref, unref, watchEffect } from 'vue'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\nimport type { InternalItem } from './items'\n\n/**\n * - match without highlight\n * - single match (index), length already known\n * - single match (start, end)\n * - multiple matches (start, end), probably shouldn't overlap\n */\nexport type FilterMatch = boolean | number | [number, number] | [number, number][]\nexport type FilterFunction = (value: string, query: string, item?: any) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n  noFilter?: boolean\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase())\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n  noFilter: Boolean,\n}, 'filter')\n\nexport function filterItems (\n  items: InternalItem[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n    noFilter?: boolean\n  },\n) {\n  const array: { index: number, matches: Record<string, FilterMatch> }[] = []\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    const customMatches: Record<string, FilterMatch> = {}\n    const defaultMatches: Record<string, FilterMatch> = {}\n    let match: FilterMatch = -1\n\n    if (query && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(item)\n\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(item as any, key, item)\n          const keyFilter = options?.customKeyFilter?.[key]\n\n          match = keyFilter\n            ? keyFilter(value, query, item)\n            : filter(value, query, item)\n\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = match\n            else defaultMatches[key] = match\n          } else if (options?.filterMode === 'every') {\n            continue loop\n          }\n        }\n      } else {\n        match = filter(item, query, item)\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = match\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    }\n\n    array.push({ index: i, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter <T extends InternalItem> (\n  props: FilterProps,\n  items: MaybeRef<T[]>,\n  query: Ref<string | undefined>,\n  options?: {\n    filterKeys?: MaybeRef<FilterKeys>\n  }\n) {\n  const strQuery = computed(() => (\n    typeof query?.value !== 'string' &&\n    typeof query?.value !== 'number'\n  ) ? '' : String(query.value))\n\n  const filteredItems: Ref<T[]> = ref([])\n  const filteredMatches: Ref<Map<unknown, Record<string, FilterMatch>>> = ref(new Map())\n\n  watchEffect(() => {\n    filteredItems.value = []\n    filteredMatches.value = new Map()\n\n    const transformedItems = unref(items)\n    const results = filterItems(\n      transformedItems,\n      strQuery.value,\n      {\n        customKeyFilter: props.customKeyFilter,\n        default: props.customFilter,\n        filterKeys: unref(options?.filterKeys) ?? props.filterKeys,\n        filterMode: props.filterMode,\n        noFilter: props.noFilter,\n      },\n    )\n\n    results.forEach(({ index, matches }) => {\n      const item = transformedItems[index]\n      filteredItems.value.push(item)\n      filteredMatches.value.set(item.value, matches)\n    })\n  })\n\n  function getMatches (item: T) {\n    return filteredMatches.value.get(item.value)\n  }\n\n  return { filteredItems, filteredMatches, getMatches }\n}\n"],"names":["_createBlock","_component_v_container","_createVNode","_component_v_row","_component_select_host","_component_select_observed_property","_component_VueDatePicker","range","_ctx","_component_v_card","key","_component_v_card_title","_component_v_card_item","_component_Line","data","_component_v_autocomplete","items","label","hint","standard_name","defineComponent","name","components","VAutocomplete","emits","setup","props","emit","selected","ref","options","computed","useRepo","ObservedProperty","all","console","log","watch","value","newValue","__exports__","SelectHost","SelectObservedProperty","SelectDate","VueDatePicker","VContainer","VRow","date","render","Host","highlightResult","text","matches","length","Array","isArray","Error","substr","genericComponent","search","String","makeFilterProps","filterKeys","makeSelectProps","omit","makeVTextFieldProps","modelValue","makeTransitionProps","transition","val","slots","t","useLocale","vTextFieldRef","isFocused","isPristine","vMenuRef","_menu","useProxiedModel","menu","get","set","v","ΨopenChildren","transformIn","transformOut","useItems","model","wrapInArray","transformed","multiple","form","useForm","filteredItems","getMatches","useFilter","undefined","selections","map","find","item","valueComparator","displayItems","hideSelected","filter","filteredItem","some","s","selection","listRef","onClear","e","openOnClear","onMousedownControl","hideNoData","readonly","isReadonly","onKeydown","includes","preventDefault","focus","onInput","target","onAfterLeave","onFocusin","onFocusout","relatedTarget","isSelecting","select","index","findIndex","splice","title","nextTick","at","useRender","hasChips","chips","chip","hasList","prepend","append","textFieldProps","filterVTextFieldProps","externalValue","menuIcon","default","eager","menuProps","noDataText","mergeProps","onClick","_ref2","isSelected","onChipClose","stopPropagation","slotProps","VChip","closable","closableChips","size","forwardRefs","defaultFilter","query","toString","toLocaleLowerCase","indexOf","propsFactory","customFilter","Function","customKeyFilter","Object","filterMode","type","noFilter","Boolean","filterItems","array","keys","customFiltersLength","loop","i","customMatches","defaultMatches","match","getPropertyFromItem","keyFilter","defaultMatchesLength","customMatchesLength","push","strQuery","filteredMatches","Map","watchEffect","transformedItems","unref","results","forEach","_ref"],"sourceRoot":""}